<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mo&#39;s Notebook | 摸着羊的笔记本</title>
  
  <subtitle>一个想成为设计师却一直在材料研究路上奔波的信息科技爱好者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.mozheyang.top/"/>
  <updated>2020-04-19T02:51:26.601Z</updated>
  <id>https://www.mozheyang.top/</id>
  
  <author>
    <name>Geon Mo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>置顶公告</title>
    <link href="https://www.mozheyang.top/2201/03/14/TOP/"/>
    <id>https://www.mozheyang.top/2201/03/14/TOP/</id>
    <published>2201-03-14T12:13:14.000Z</published>
    <updated>2020-04-19T02:51:26.601Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最近更新"><a href="#最近更新" class="headerlink" title="最近更新"></a>最近更新</h1><ul><li>为增强网站的安全性，网站链接正逐渐升级为https。关于https可参考：<a href="https://cloud.tencent.com/developer/article/1340721" target="_blank" rel="noopener">最详细的 HTTPS 科普扫盲帖</a>。</li><li>新增<a href="https://www.mozheyang.top/projects/"><strong>项目</strong></a>板块，已更新<code>期刊信息可视化</code>。</li><li>新域名<a href="https://mozheyang.com/" target="_blank" rel="noopener">https://mozheyang.com/</a>已同时启用，主要利于国外访问。</li><li><code>评论功能</code>目前仍处于并可能长期处于测试状态。</li></ul><h1 id="热门博客"><a href="#热门博客" class="headerlink" title="热门博客"></a>热门博客</h1><ul><li><a href="https://www.mozheyang.top/2018/02/15/ORRbasic/">氧还原反应（Oxygen Reduction Reaction）基础</a></li><li><a href="https://www.mozheyang.top/2019/03/31/LSV-KLeq/">极限扩散电流到底是不是材料的本征性能？ | 基于K-L方程的RDE表面液流理论</a></li><li><a href="https://www.mozheyang.top/2018/02/25/docear/">思维导图+文献管理 | Docear使用体会</a></li><li><a href="https://www.mozheyang.top/2018/07/22/PhenoNature/">横看成岭侧成峰 | 理工科思维论现象与本质</a></li></ul><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;最近更新&quot;&gt;&lt;a href=&quot;#最近更新&quot; class=&quot;headerlink&quot; title=&quot;最近更新&quot;&gt;&lt;/a&gt;最近更新&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;为增强网站的安全性，网站链接正逐渐升级为https。关于https可参考：&lt;a href=&quot;https://cloud.tencent.com/developer/article/1340721&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;最详细的 HTTPS 科普扫盲帖&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;新增&lt;a href=&quot;https://www.mozheyang.top/projects/&quot;&gt;&lt;strong&gt;项目&lt;/strong&gt;&lt;/a&gt;板块，已更新&lt;code&gt;期刊信息可视化&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;新域名&lt;a href=&quot;https://mozheyang.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mozheyang.com/&lt;/a&gt;已同时启用，主要利于国外访问。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;评论功能&lt;/code&gt;目前仍处于并可能长期处于测试状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;热门博客&quot;&gt;&lt;a href=&quot;#热门博客&quot; class=&quot;headerlink&quot; title=&quot;热门博客&quot;&gt;&lt;/a&gt;热门博客&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozheyang.top/2018/02/15/ORRbasic/&quot;&gt;氧还原反应（Oxygen Reduction Reaction）基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozheyang.top/2019/03/31/LSV-KLeq/&quot;&gt;极限扩散电流到底是不是材料的本征性能？ | 基于K-L方程的RDE表面液流理论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozheyang.top/2018/02/25/docear/&quot;&gt;思维导图+文献管理 | Docear使用体会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozheyang.top/2018/07/22/PhenoNature/&quot;&gt;横看成岭侧成峰 | 理工科思维论现象与本质&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>LAMMPS学习札记（二）——输出与输入篇</title>
    <link href="https://www.mozheyang.top/2020/04/10/lammps2/"/>
    <id>https://www.mozheyang.top/2020/04/10/lammps2/</id>
    <published>2020-04-10T03:43:03.000Z</published>
    <updated>2020-04-19T02:25:26.014Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://lammps.sandia.gov/movies/logo.gif" alt=""></p><p><a href="">上回</a>我们说到，如何实现LAMMPS的安装和（利用串行程序）运行一次LAMMPS。</p><a id="more"></a><p>本文的题目是输出与输入，而不是常见顺序（输入与输出），目的是强调将<strong>输出</strong>命令的学习顺序放在前面，有利于我们调试程序，从而更好地理解LAMMPS中各命令的作用。</p><h1 id="输出命令——dump"><a href="#输出命令——dump" class="headerlink" title="输出命令——dump"></a>输出命令——dump</h1><p>本文还是先以<code>Example/colloid/in.colloid</code>为例。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#dump<span class="number">1</span> all atom <span class="number">1000</span> dump.colloid</span><br><span class="line"></span><br><span class="line">#dump<span class="number">2</span> all image <span class="number">1000</span> image.*.jpg type type &amp;</span><br><span class="line">#zoom <span class="number">1.5</span> center d <span class="number">0.5</span> <span class="number">0.5</span> <span class="number">0.5</span></span><br><span class="line">#dump_modify<span class="number">2</span> pad <span class="number">5</span> adiam <span class="number">1</span> <span class="number">5.0</span> adiam <span class="number">2</span> <span class="number">1.5</span></span><br><span class="line"></span><br><span class="line">#dump<span class="number">3</span> all movie <span class="number">1000</span> movie.mpg type type &amp;</span><br><span class="line">#zoom <span class="number">1.5</span> center d <span class="number">0.5</span> <span class="number">0.5</span> <span class="number">0.5</span></span><br><span class="line">#dump_modify<span class="number">3</span> pad <span class="number">5</span> adiam <span class="number">1</span> <span class="number">5.0</span> adiam <span class="number">2</span> <span class="number">1.5</span></span><br></pre></td></tr></table></figure><blockquote><p>“#”是注释的意思。<code>in.colloid</code>默认把输出都注释掉了，所以没有输出文件。<br>我们只要把“#”删除，就可以执行对应的命令。</p></blockquote><p>以上命令中出现了三种类型的数据：<strong>dump数据文件</strong>、<strong>jpg格式图片</strong>以及<strong>mpg格式视频</strong>。</p><p>最简单的是<code>dump</code>数据文件，也是我们最常用的。通过dump文件我们可以利用其它软件，例如<a href="https://www.ovito.org/" target="_blank" rel="noopener">OVITO</a>，很方便的进行数据可视化。效果要比LAMMPS内置的图片和视频输出效果更好。对应的命令是：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dump<span class="number">1</span> all atom <span class="number">1000</span> dump.colloid</span><br></pre></td></tr></table></figure><p>他的意思其实是：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">dump</span><span class="selector-attr">[ID]</span> <span class="selector-attr">[group ID]</span> <span class="selector-attr">[style]</span> <span class="selector-attr">[timestep]</span> <span class="selector-attr">[filename]</span> <span class="selector-attr">[args]</span></span><br></pre></td></tr></table></figure><ul><li><code>ID</code>：为一个<code>dump</code>命令起一个唯一的代号，一般就是1、2、3</li><li><code>group ID</code>：之前定义的一组对象的组（group）唯一代号，比如所有原子（all），后者氧原子氢原子。除了默认的<code>group ID</code>外，其它<code>group ID</code>需要在使用之前通过<code>group</code>命令定义。</li><li><code>style</code>：数据类型，比如原子三维坐标（<code>atom</code>）。</li><li><code>timestep</code>：记录的时间步长，每隔一个<code>timestep</code>就会记录一行数据。</li><li><code>filename</code>：输出文件名。这里面的“*”指的是每一个<code>timestep</code>记录一个<code>dump</code>文件，“*”处利用当时的时间步进行替代。</li><li><code>args</code>：对应于不同<code>style</code>的一些其它参数，在<a href="https://lammps.sandia.gov/doc/dump.html" target="_blank" rel="noopener"><code>dump</code>命令</a>有更详细的介绍。</li></ul><p>输出文件的格式如下所示：</p><p><img src="https://www.mozheyang.top/images/LAMMPS/dumpfile.png" alt=""></p><blockquote><p>所使用的编辑器为<code>Sublime Text</code>，相对于记事本，更适合于用来编辑代码和数据，不容易产生未知的符号（编码和文件头问题）。同类竞品有<code>VS Code</code>或<code>Atom</code>，随便下载一个顺手的即可。</p></blockquote><p>可以分析LAMMPS输出的dump文件格式为：</p><p><img src="https://www.mozheyang.top/images/LAMMPS/dumpstructure.png" alt=""></p><p><a href="https://lammps.sandia.gov/doc/dump_image.html" target="_blank" rel="noopener">图片或视频</a>的输出类似，不过在<code>args</code>处有其他的参数。博主认为直接输出图片或视频不很必要，感兴趣的读者可以自行了解。另外，<code>dump_modify</code>命令是对之前<code>dump</code>命令中的设置进行的调整，一般是一些默认设置。博主作为新手也不是很了解，感兴趣的读者可以参考官方文档：<a href="https://lammps.sandia.gov/doc/dump.html" target="_blank" rel="noopener">dump命令</a>和<a href="https://lammps.sandia.gov/doc/dump_modify.html" target="_blank" rel="noopener">dump_modify命令</a>。</p><p>OVITO可视化<code>dump</code>文件是很方便的。在这里博主直接引用一个操作流程。</p><p><img src="https://www.mozheyang.top/images/LAMMPS/OVITO.png" alt=""></p><p class="refs">Ref: http://cms.sjtu.edu.cn/md_manual.html</p><h1 id="输入命令read-data"><a href="#输入命令read-data" class="headerlink" title="输入命令read_data"></a>输入命令read_data</h1><p>LAMMPS支持<code>lattice</code>命令建立晶体模型，对金属模拟来说是很有用的，在互联网上的教程也很多。博主主要研究的是分子运动的模拟，不属于晶体模拟范畴；而且分子形态和位置都需要自己定义，那么<code>lattice</code>命令就不是那么理想了。接下来博主准备以<code>molecule</code>目录的<code>in.water</code>为例进行LAMMPS数据输入的实例介绍：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LAMMPS根目录\Examples\USER\atc\molecule</span><br></pre></td></tr></table></figure><p>在这个例子中，<code>in.water</code>读取了一个文件<code>water.init</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">read_data</span> <span class="selector-tag">water</span><span class="selector-class">.init</span></span><br></pre></td></tr></table></figure><p>通过LAMMPS运行文件，只要是<code>utf-8</code>编码的文本文件，那么后缀或前缀的不同不会产生太大影响。但一般均按照习惯进行命名。<code>*.init</code>文件也可命名为<code>*.data</code>。我们可以来看看<code>water.init</code>文件的格式。此格式即LAMMPS输入文件的格式。</p><p><img src="https://www.mozheyang.top/images/LAMMPS/datafile.png" alt=""></p><p>LAMMPS输入文件格式要求较为严格。如果格式不正确将不能正常运行。好在LAMMPS系统做的错误提示比较好用，一般能够根据提示找到输入文件的问题所在。输入文件可以很立体全面地定义输入分子的结构和作用势信息，如原子质量、原子间作用势参数、原子坐标、原子成键等等。读者可以具体参考关于<a href="https://lammps.sandia.gov/doc/99/data_format.html" target="_blank" rel="noopener">data format的官方链接</a>。</p><h1 id="下期预告"><a href="#下期预告" class="headerlink" title="下期预告"></a>下期预告</h1><p>到此为止，我们已经是一个可以随意调试脚本并查看调试结果的LAMMPS“脚本小子”了。</p><p>如何利用LAMMPS成为真正的盐酒者与磕雪家呢？那其中命令的物理意义是一定要了解的。</p><p>博主会挑一些自己用过的命令进行实践和介绍。Love and peace。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://lammps.sandia.gov/movies/logo.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;&quot;&gt;上回&lt;/a&gt;我们说到，如何实现LAMMPS的安装和（利用串行程序）运行一次LAMMPS。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Information Science &amp; Technology  信息科学与技术" scheme="https://www.mozheyang.top/tags/Information-Science-Technology-%E4%BF%A1%E6%81%AF%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Material  材料" scheme="https://www.mozheyang.top/tags/Material-%E6%9D%90%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>LAMMPS学习札记（一）——安装篇</title>
    <link href="https://www.mozheyang.top/2020/04/04/lammps1/"/>
    <id>https://www.mozheyang.top/2020/04/04/lammps1/</id>
    <published>2020-04-04T10:38:18.000Z</published>
    <updated>2020-04-19T02:25:26.002Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://lammps.sandia.gov/movies/logo.gif" alt=""></p><p>对“分子动力学”的认识最初来自于本科时的《计算材料学》课程。那时候就听说有个叫做LAMMPS的开源软件，可以实现分子动力学模拟。但是苦于安装困难，并没有继续深究。作为一个热爱折腾的人，没有深究这件事一直让我过意不去。</p><p>好在，时过境迁。今天的LAMMPS早已不是过去的LAMMPS，<strong>行云流水的安装进度</strong>让人止不住地鼓掌叫好。那么，究竟有多简单？</p><a id="more"></a><h1 id="Windows-10系统上安装"><a href="#Windows-10系统上安装" class="headerlink" title="Windows 10系统上安装"></a>Windows 10系统上安装</h1><p>在Windows上的安装，可以直接访问美国Sandia国家实验室地官网：<a href="https://lammps.sandia.gov/" target="_blank" rel="noopener">https://lammps.sandia.gov/</a>。进入Download界面，找到你所需要的Windows版本。说时候，网站导航不是一般的迷惑，很容易迷路，所以在这我给大家一个参考：关键词是<a href="https://lammps.sandia.gov/doc/Install_windows.html" target="_blank" rel="noopener">Pre-built Windows executables</a>，含义是已经编译好的Windows可运行程序（<code>exe</code>文件）。如果你是开发者的话，也可以选源代码，自己编译代码运行，灵活度更高。</p><p><img src="https://www.mozheyang.top/images/LAMMPS/download.png" alt=""></p><p>下载下来一步步安装就好了。然后我们会收获一个文件夹。</p><p><img src="https://www.mozheyang.top/images/LAMMPS/folder.png" alt=""></p><p>好了，你没看错，我们什么都不需要配置，已经获得了一个可以输出有趣结果的LAMMPS程序了！需要在Linux编译，还有很多奇怪的参数需要配置的日子已经一去不复返了。</p><h1 id="运行LAMMPS"><a href="#运行LAMMPS" class="headerlink" title="运行LAMMPS"></a>运行LAMMPS</h1><h2 id="正确的文件夹"><a href="#正确的文件夹" class="headerlink" title="正确的文件夹"></a>正确的文件夹</h2><p>我们可以跑个demo（示例）试试。记住以下路径：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当前目录（即LAMMPS根目录）/Examples/colloid</span><br></pre></td></tr></table></figure><p>这就是一个简单的colloid示例所在的项目位置。LAMMPS启动的方式很GEEK：先进入以上文件夹（colloid），右键单击后，选择在此处打开<code>Powershell</code>（<code>cmd</code>也可以，俗称小黑框）：</p><p><img src="https://www.mozheyang.top/images/LAMMPS/powershell.png" alt=""></p><p>输入<code>ls</code>，可以显示当前文件下下的文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Program Files\LAMMPS <span class="number">64</span><span class="literal">-bit</span> <span class="number">27</span>Feb2020\Examples\colloid&gt; ls                                                        </span><br><span class="line"></span><br><span class="line">    目录: D:\Program Files\LAMMPS <span class="number">64</span><span class="literal">-bit</span> <span class="number">27</span>Feb2020\Examples\colloid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime         Length Name</span><br><span class="line">----                -------------         ------ ----</span><br><span class="line"><span class="literal">-a</span>----        <span class="number">2020</span>/<span class="number">2</span>/<span class="number">28</span>      <span class="number">5</span>:<span class="number">21</span>           <span class="number">1117</span> in.colloid</span><br></pre></td></tr></table></figure><p>或者输入<code>dir</code>（cmd中没有<code>ls</code>命令）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Program Files\LAMMPS <span class="number">64</span><span class="literal">-bit</span> <span class="number">27</span>Feb2020\Examples\colloid&gt; dir                                                       </span><br><span class="line"></span><br><span class="line">    目录: D:\Program Files\LAMMPS <span class="number">64</span><span class="literal">-bit</span> <span class="number">27</span>Feb2020\Examples\colloid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime         Length Name</span><br><span class="line">----                -------------         ------ ----</span><br><span class="line"><span class="literal">-a</span>----        <span class="number">2020</span>/<span class="number">2</span>/<span class="number">28</span>      <span class="number">5</span>:<span class="number">21</span>           <span class="number">1117</span> in.colloid</span><br></pre></td></tr></table></figure><p>可以看到文件夹里有一个叫做<code>in.collide</code>的文件。这便是LAMMPS的输入文件了。更改输入文件，我们可以实现不同模型的计算。对原子/分子结构和坐标还可以用<code>data</code>文件定义，我们之后再进行讨论。</p><p>一定要进入有<code>in.collide</code>文件的文件夹，要不然下一步操作是无效的。</p><h2 id="正确的运行"><a href="#正确的运行" class="headerlink" title="正确的运行"></a>正确的运行</h2><p>接下来输入一个<strong>简单的命令</strong><code>lmp_serial -i in.collid</code>（这是最重要的）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Program Files\LAMMPS <span class="number">64</span><span class="literal">-bit</span> <span class="number">27</span>Feb2020\Examples\colloid&gt; lmp_serial <span class="literal">-i</span> in.collid</span><br></pre></td></tr></table></figure><p>如果出现下列状态，恭喜你，运行成功了。</p><p><img src="https://www.mozheyang.top/images/LAMMPS/running.png" alt=""></p><p>知其然，还要知其所以然。这命令是什么意思呢？</p><p>我试着查了一下，输入<code>lmp_serial -h</code>（<code>-h</code>参数常做help使用）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Program Files\LAMMPS <span class="number">64</span><span class="literal">-bit</span> <span class="number">27</span>Feb2020\Examples\colloid&gt; lmp_serial <span class="literal">-h</span>                                             </span><br><span class="line">Large<span class="literal">-scale</span> Atomic/Molecular Massively Parallel Simulator - <span class="number">27</span> Feb <span class="number">2020</span></span><br><span class="line"></span><br><span class="line">Usage example: D:\Program Files\LAMMPS <span class="number">64</span><span class="literal">-bit</span> <span class="number">27</span>Feb2020\bin\lmp_serial.exe <span class="literal">-var</span> t <span class="number">300</span> <span class="literal">-echo</span> screen <span class="operator">-in</span> in.alloy</span><br><span class="line"></span><br><span class="line">List of command line options supported by this LAMMPS executable:</span><br><span class="line"></span><br><span class="line"><span class="literal">-echo</span> none/screen/log/both  : echoing of input script (<span class="literal">-e</span>)</span><br><span class="line"><span class="literal">-help</span>                       : print this help message (<span class="literal">-h</span>)</span><br><span class="line"><span class="operator">-in</span> filename                : read input from file, not stdin (<span class="literal">-i</span>)</span><br></pre></td></tr></table></figure><p>OK，我们这里的<code>lmp_serial</code>是串行（serial）的版本的LAMMPS；<code>-i</code>的意思是”read input from file“，即从<code>in</code>文件中读取关于LAMMPS运行的一切模型和参数；最后接上<code>in</code>文件的名字<code>in.collid</code>，就大功告成了。</p><blockquote><p>对应串行运行命令<code>lmp_serial</code>的是并行运行命令<code>lmp_mpi</code>。如果在计算中心进行模拟，多是并行多核计算。</p></blockquote><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>博主发现LAMMPS这个软件本身很强大好用，可用于较多现象的模拟，但在国内的应用却并不多，相关资料更是极其缺乏（即使是收费资料）。博主自己琢磨的过程走了很多跟科学无关的弯路，在这里记录下来，希望大家使用的时候都能少走弯路。</p><p>到此为止我们已经能够让LAMMPS<strong>正常运行</strong>了。下次我们的主题将会是如何掌握程序的输入输出，实现脚本调试。<del>而怎么让LAMMPS根据物理规律和我们的意图<strong>正确运行</strong>，将是我们下下次的讨论的主题。</del>Love and peace。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://lammps.sandia.gov/movies/logo.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;对“分子动力学”的认识最初来自于本科时的《计算材料学》课程。那时候就听说有个叫做LAMMPS的开源软件，可以实现分子动力学模拟。但是苦于安装困难，并没有继续深究。作为一个热爱折腾的人，没有深究这件事一直让我过意不去。&lt;/p&gt;
&lt;p&gt;好在，时过境迁。今天的LAMMPS早已不是过去的LAMMPS，&lt;strong&gt;行云流水的安装进度&lt;/strong&gt;让人止不住地鼓掌叫好。那么，究竟有多简单？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Information Science &amp; Technology  信息科学与技术" scheme="https://www.mozheyang.top/tags/Information-Science-Technology-%E4%BF%A1%E6%81%AF%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Material  材料" scheme="https://www.mozheyang.top/tags/Material-%E6%9D%90%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>在路上，略感焦虑</title>
    <link href="https://www.mozheyang.top/2020/04/03/insane/"/>
    <id>https://www.mozheyang.top/2020/04/03/insane/</id>
    <published>2020-04-03T12:04:23.000Z</published>
    <updated>2020-04-19T02:25:26.002Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.mozheyang.top/images/others/ontheway.jpg" alt=""></p><p>如题。</p><a id="more"></a><h1 id="不能失去控制的贪婪"><a href="#不能失去控制的贪婪" class="headerlink" title="不能失去控制的贪婪"></a>不能失去控制的贪婪</h1><p>贪念。最近贪念太重。<br>很多东西要是够不到的话可能就不会去想了。<br>但是一旦能够到而又最终不可得，那一定会很难受。<br>一旦贪念得到满足，那下一个贪念又会冒出来。</p><p>是好是坏？<br>要知道贪婪也是人类持续进步的动力啊。<br>贪婪需要把握尺度。<br>把握得好，为我所用；把握不好，反噬成魔。</p><h1 id="没有失去控制的混沌"><a href="#没有失去控制的混沌" class="headerlink" title="没有失去控制的混沌"></a>没有失去控制的混沌</h1><p>蝴蝶效应，又在空间和时间维度都有着巨大影响：<br>某处RNA、DNA的突变，导致了COVID-19疫情在全球的蔓延；<br>很久之前一个不经意的决定，对今天的成败产生了巨大的影响。</p><p>有点类似于物理学中的<strong>混沌（chaos）现象</strong>。</p><blockquote><p>混沌是指<strong>确定性动力学系统</strong>因对<strong>初值</strong>敏感而表现出的不可预测的、类似随机性的运动。<br>——引自百度百科</p></blockquote><p>回想起来，很多今天出现的问题都是几年前的决定所致。<br>物理模型中的混沌动力学系统，影响因素相对较少，能够呈现更清晰的模式，但仍无法预测；<br>现实生活中的混沌动力学系统，或许掺入了随机因素，使得各种作用关系和变化变得扑朔迷离，直叫人措手不及。</p><p>但这不代表我们对自己的人生失去了控制。<br>我们还能控制<strong>初值</strong>，根据自己认定的模式去选择遵守的<strong>原则</strong>和采取的<strong>行动</strong>。<br>为接下来的人生播下幸福的种子，静等花开。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.mozheyang.top/images/others/ontheway.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如题。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Thought  随想" scheme="https://www.mozheyang.top/tags/Thought-%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>高通量制备 | 加快材料领域研究步伐</title>
    <link href="https://www.mozheyang.top/2020/02/11/benjamin2020/"/>
    <id>https://www.mozheyang.top/2020/02/11/benjamin2020/</id>
    <published>2020-02-11T09:11:45.000Z</published>
    <updated>2020-04-19T02:25:25.999Z</updated>
    
    <content type="html"><![CDATA[<p>博主一直关注的材料”高通量制备”领域终于出现了新的进展。不了解”高通量”概念的同学呢，可以先看看博主之前的一篇博文：<a href="https://www.mozheyang.top/2017/08/12/curtarolo2013/">高通量计算 | 现状及展望</a>。相信厌倦了“炒菜式”材料学的同学会对这种新的方法学有一定兴趣。</p><p>今天跟大家分享的是一篇有关高通量纳米合成的文章，发表在2020年1月24日的《Science》期刊上。</p><p><img src="https://www.mozheyang.top/images/benjamin2020/title.png" alt=""></p><p class="refs">参考文献：Steimle B C, Fenton J L, Schaak R E. Rational construction of a scalable heterostructured nanorod megalibrary[J]. Science, 2020, 367(6476): 418-424.</p><a id="more"></a><h1 id="为什么说这一进展是重要的呢？"><a href="#为什么说这一进展是重要的呢？" class="headerlink" title="为什么说这一进展是重要的呢？"></a>为什么说这一进展是重要的呢？</h1><p>博主浅见，高通量（High-throughput）领域可以主要分为三块儿：<strong>高通量计算</strong>、<strong>高通量制备</strong>和<strong>高通量表征</strong>。前者基于人们的模型和假设，有坚实的理论基础，实现难度相对小；由于自然规律的复杂性和未知性，缺少坚实的理论基础，后两者实现难度相对更大。<br>这篇文章的主要内容是：作者基于界面反应性和晶体结构关系，合成了具有多达6种材料（过渡金属硫化物，事实唯一自变量），8个片段和11种界面结构的<strong>65520种金属硫化物纳米棒</strong>。通过这种方法，研究者们可以合成其他化合物样品库。如果还能结合某些性能的高通量表征，那么材料研究中最实用的<strong>工艺-性能</strong>关系便可以进一步利用如今当红的<strong>机器学习技术</strong>被得出。因为<strong>大规模制备技术有助于自动化技术的应用</strong>，从而有助于材料的高通量筛选，因此在博主眼里，这一进展是很重要的。</p><p>不从事IT行业的部分同学可能还是对人工智能/机器学习一类的自动化技术存在敌意。毕竟如果机器能够做我们的工作之后，那我们又能去做什么呢？<br>其实大可不必这么想。机器取代是无聊而重复的工作。重复的工作无聊，却必要，如果都让机器给抢走了，咱们人类不就有机会从事有趣的工作了吗？<br>还有同学可能会说：“何不食肉糜？”你不想做无聊的工作，但总有人喜欢，比如我就喜欢。不否认确实存在这一可能性。但事实就是，<strong>具有“无聊”属性的重复工作会越来越少</strong>。世界上越来越多的企业都会要求职员具有自动化技能。下面的一份McKinsey的报告就能说明一部分问题：预计到2030年，相对于2016年的情况，人们花在IT（自动化）技术工作上的时间会增长55%，而花在机械重复人工工作上的时间却减少14%。</p><p><img src="https://www.mckinsey.com/~/media/McKinsey/Featured%20Insights/Future%20of%20Organizations/Skill%20shift%20Automation%20and%20the%20future%20of%20the%20workforce/SVGZ-FutureWorkforce-Ex1-v2.ashx" alt=""></p><p class="refs">参考文献：Jacques Bughin, Eric Hazan, Susan Lund, Peter Dahlström, Anna Wiesinger, and Amresh Subramaniam. Skill shift: Automation and the future of the workforce. McKinsey Global Institute, 2018, https://www.mckinsey.com/featured-insights/future-of-work/skill-shift-automation-and-the-future-of-the-workforce.</p><h1 id="合成方法论"><a href="#合成方法论" class="headerlink" title="合成方法论"></a>合成方法论</h1><p>接下来，我们来看看文章作者具体采用了何种方法论吧。<br>特别地，本文所采用的方式是液相中的<strong>阳离子交换反应</strong>（cation-exchange reactions），<strong>即将固相（金属硫化物、硒化物、碲化物、磷化物、卤化物和氧化物）中的阳离子替换为液相（溶液）中的阳离子</strong>。具体方法为：首先将装有蒸馏的油胺（oleylamine）作为稳定配体以及苄基醚（benzyl ether）和十八碳烯（octadecene）作为溶剂的烧瓶加热至120°C，再将作为Lewis碱的分散在三辛基膦（tri-octyl phosphine）中的Cu<sub>1.8</sub>S纳米棒注入。接下来注入具有其它金属离子的交换溶液注入（控制好化学计量比），逐步将Cu<sub>1.8</sub>S实现结构替换，如图1所示。这里所使用的合成方法基于该课题组2018的成果：</p><p class="refs">    参考文献：Fenton J L, Steimle B C, Schaak R E. Tunable intraparticle frameworks for creating complex heterostructured nanoparticle libraries[J]. Science, 2018, 360(6388): 513-517.</p><p><img src="https://www.mozheyang.top/images/benjamin2020/figure1.png" style="zoom:67%;" /></p><center>图1  G-6纳米棒的合成</center><p>这个合成方法还是挺有意思的，只交换了Cu<sub>1.8</sub>S的部分，不对已交换的部分产生影响。这是实现稳定合成的关键。图1G-n（generation n）中n为代（generation）数。</p><h2 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h2><p>通过改变纳米棒中<strong>交换溶液注入顺序</strong>，可以实现材料组合顺序及其形成的异质界面的改变；改变<strong>交换溶液的量</strong>，还可以实现对纳米交换程度的控制。如图2所示的G-8纳米棒的合成示意图展示了为什么大样品库合成是可以实现的。</p><p><img src="https://www.mozheyang.top/images/benjamin2020/figure2.jpg" alt=""></p><center>图2  G-8纳米棒合成过程产生的16380种样品</center><h2 id="拓展合成方法（暂不计入样品库）"><a href="#拓展合成方法（暂不计入样品库）" class="headerlink" title="拓展合成方法（暂不计入样品库）"></a>拓展合成方法（暂不计入样品库）</h2><p>依赖以上基本原则完成样品库只是一种思路。事实上，从G-2开始还可以选择其它更复杂的反应路径。</p><p><img src="https://www.mozheyang.top/images/benjamin2020/figure3.png" style="zoom: 67%;" /></p><center>图3  通过G-2纳米棒直接合成G-4G-8纳米棒的反应路径</center><h1 id="样品库大小"><a href="#样品库大小" class="headerlink" title="样品库大小"></a>样品库大小</h1><p>作为一种高通量制备方法，我们需要关注的是，该方法在多大范围内使用，也即其潜在样品库多大。<br>由图2可知，基于基本的合成原则，从G-1到G-2体现的是可以插入异质结构的<strong>三种位置</strong>，从G-2之后体现的是五种可交换离子除去一个（Zn<sup>2+</sup>）之后所剩下的<strong>四种可交换离子</strong>（In<sup>3+</sup>、Ga<sup>3+</sup>、Co<sup>2+</sup>、Cd<sup>2+</sup>）。由此可计算出该路径样品库大小为：</p><script type="math/tex; mode=display">\begin{cases}\begin{split}& G-3: 1 \times 3 \times 4^1 = 12 \\& G-4: 1 \times 3 \times 4^2 = 48 \\& G-5: 1 \times 3 \times 4^3 = 192 \\& G-6: 1 \times 3 \times 4^4 = 768 \\& G-7: 1 \times 3 \times 4^5 = 3072 \\& G-8: 1 \times 3 \times 4^6 = 12288 \\\end{split}\end{cases}</script><script type="math/tex; mode=display">\text{Library Size}_1 = 12+48+192+768+3072+12288=16380</script><p>将图3所示的方法计入，那么除去Zn<sup>2+</sup>外，还有另外三种可交换离子（注：这里有一些疑惑，是否应该还剩四种可交换离子？如果是这样，那就有12种G-2纳米棒）可以掺入Cu<sub>1.8</sub>S合成G-2纳米棒，共计$3 \times 3 = 9$种G-2纳米棒。同上计算方法，可计算出样品库大小：</p><script type="math/tex; mode=display">\begin{cases}\begin{split}& G-3: 9 \times 4^1 = 36 \\& G-4: 9 \times 4^2 = 144 \\& G-5: 9 \times 4^3 = 576 \\& G-6: 9 \times 4^4 = 2304 \\& G-7: 9 \times 4^5 = 9216 \\& G-8: 9 \times 4^6 = 36864 \\\end{split}\end{cases}</script><script type="math/tex; mode=display">\text{Library Size}_2 = 36+144+576+2304+9216+36864=49140</script><p>两个样品库相加可得总样品库大小为：</p><center><p class="eqnBlock">$$\text{Library Size}_\text{total} = 16380 + 49140 = 65520$$</p></center><p>也就是作者在摘要中所提及的样品库大小。<br>作者认为，其它阳离子也可以实现对Cu<sup>+</sup>的交换，例如Ag<sup>+</sup>、Au<sup>+</sup>、Mn<sup>2+</sup>、Ni<sup>2+</sup>、Pd<sup>2+</sup>、Pt<sup>2+</sup>、Sn<sup>2+</sup>和Sn<sup>4+</sup>等。因此，该样品库可能会被扩充得更大。</p><h1 id="关于组合逻辑之外的一些物理限制"><a href="#关于组合逻辑之外的一些物理限制" class="headerlink" title="关于组合逻辑之外的一些物理限制"></a>关于组合逻辑之外的一些物理限制</h1><h2 id="界面结构"><a href="#界面结构" class="headerlink" title="界面结构"></a>界面结构</h2><p>材料学与传统化学之间的一个重要分界线是材料学更关注物质结构。本文更偏向于材料学研究，因为其不仅关注了纳米棒的成分，更关注了纳米棒间各元素的相及相界面。经过阳离子交换形成的产物为纤锌矿结构（Wurtzite, WZ），具有六方密堆积结构；而交换反应基体Cu<sub>1.8</sub>S为方铁矿结构（Roxbyite），S原子以扭曲的六方密堆积排列。不同的晶格类型产生了界面上的晶格错配。需要声明的是，并不是所有界面结构都能够稳定存在。关于界面的组合，是难以实现随机组合的。其遵从于不同元素原子之间匹配的热力学原理。</p><p><img src="https://www.mozheyang.top/images/benjamin2020/figure4.jpg" alt=""></p><center>图4  不同物相（交换相和基体相）之间的界面结构</center><h2 id="异构体与反应选择性"><a href="#异构体与反应选择性" class="headerlink" title="异构体与反应选择性"></a>异构体与反应选择性</h2><p>作者对146个颗粒的分析表明，有88％的颗粒形成了预期的ZnS–CuInS<sub>2</sub>–CoS–Cu<sub>1.8</sub>S构型，其余样品（12%）主要由源自中心带G-2 Cu<sub>1.8</sub>S–ZnS–Cu<sub>1.8</sub>S的相关纳米棒组成<strong>杂质</strong>。其余样品（12%）中的大多数仍然遵循以上<strong>基本合成原则</strong>。但是，一小部分样品（&lt;2％）不符合该合成原则，这表明其他因素有可能可以被利用以生产更复杂的纳米棒。</p><p><img src="https://www.mozheyang.top/images/benjamin2020/figure5.png" style="zoom: 67%;" /></p><center>图5  合成反应具有选择性，大部分符合预期</center><h2 id="从微量到宏量反应"><a href="#从微量到宏量反应" class="headerlink" title="从微量到宏量反应"></a>从微量到宏量反应</h2><p>反应物数目变化有可能对产物产生影响。事实也的确如此。<br>作者对155个颗粒的分析表明，有70％的颗粒形成了预期的ZnS–CuInS<sub>2</sub>–ZnS–CuInS<sub>2</sub>–ZnS–CuInS<sub>2</sub>构型。其余颗粒为含较少条纹的纳米棒，这些条纹是由六个顺序反应步骤中的任何一个步骤中的<strong>过度交换</strong>引起的。这种过度交换可能来自反应容器中的局部浓度或热梯度，也可能来自基于纳米棒形态，尺寸和缺陷密度差异的反应性效应。</p><p><img src="https://www.mozheyang.top/images/benjamin2020/figure6.png" style="zoom: 50%;" /></p><center>图6  宏量反应中会因过度交换产生纳米棒中的条纹</center><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>综上所述，该文实现的是<strong>元素及其排列顺序</strong>二者的组合方法，通过该方法可以合成非常大量的多过渡金属硫化物。<br>能够发表在《Science》或《Nature》期刊的文章都不会只是特定领域的文章。他们会给各领域的研究者都带来一定的启发。比如这篇文章，是纳米合成领域的一个突破，也是高通量制备领域的一个突破。<br>博主结合自身认知理解了这篇文章，希望能给你带来一些启发。博主水平有限，难免错漏，望各位读者老爷不吝赐教。咱们下次见。 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博主一直关注的材料”高通量制备”领域终于出现了新的进展。不了解”高通量”概念的同学呢，可以先看看博主之前的一篇博文：&lt;a href=&quot;https://www.mozheyang.top/2017/08/12/curtarolo2013/&quot;&gt;高通量计算 | 现状及展望&lt;/a&gt;。相信厌倦了“炒菜式”材料学的同学会对这种新的方法学有一定兴趣。&lt;/p&gt;
&lt;p&gt;今天跟大家分享的是一篇有关高通量纳米合成的文章，发表在2020年1月24日的《Science》期刊上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.mozheyang.top/images/benjamin2020/title.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;refs&quot;&gt;参考文献：Steimle B C, Fenton J L, Schaak R E. Rational construction of a scalable heterostructured nanorod megalibrary[J]. Science, 2020, 367(6476): 418-424.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Chemistry  化学" scheme="https://www.mozheyang.top/tags/Chemistry-%E5%8C%96%E5%AD%A6/"/>
    
      <category term="Material  材料" scheme="https://www.mozheyang.top/tags/Material-%E6%9D%90%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>检索原理与技巧</title>
    <link href="https://www.mozheyang.top/2020/02/05/AdvancedSearch/"/>
    <id>https://www.mozheyang.top/2020/02/05/AdvancedSearch/</id>
    <published>2020-02-05T03:10:28.000Z</published>
    <updated>2020-02-05T04:07:39.000Z</updated>
    
    <content type="html"><![CDATA[<script type="math/tex; mode=display">检索式=关键词+逻辑运算符+搜索指令（语法）+...</script><a id="more"></a><p><strong>主体：</strong>关键词<br><strong>限定条件：</strong>逻辑运算符、搜索指令（语法）</p><p>以下搜索实践在Web of Science、Google、Bing和百度等搜索引擎适用或部分适用！</p><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><h2 id="布尔（逻辑）运算符"><a href="#布尔（逻辑）运算符" class="headerlink" title="布尔（逻辑）运算符"></a>布尔（逻辑）运算符</h2><ul><li>与运算 AND</li><li>或运算 OR</li><li>非运算 NOT</li><li>优先处理算符 （）</li></ul><h2 id="截词算符（通配符）"><a href="#截词算符（通配符）" class="headerlink" title="截词算符（通配符）"></a>截词算符（通配符）</h2><p>后截断（开放式截断）</p><h2 id="位置算符"><a href="#位置算符" class="headerlink" title="位置算符"></a>位置算符</h2><p>位置算符又称邻接算符（adjacent operators），适用于两个检索词以指定间隔距离或者指定的顺序出现的场合，比如，以词组形式表达的概念；彼此相邻的两个或两个以上的词；被禁用词或特殊符号分隔的词以及化学分子式等。</p><blockquote><ul><li>NEAR</li><li>SAME</li></ul></blockquote><h2 id="精确检索（词组检索）"><a href="#精确检索（词组检索）" class="headerlink" title="精确检索（词组检索）"></a>精确检索（词组检索）</h2><p>短语/词组，应将其放置于引号内。</p><blockquote><p>“Oxygen reduction reaction”</p></blockquote><h1 id="检索策略"><a href="#检索策略" class="headerlink" title="检索策略"></a>检索策略</h1><h2 id="扩大检索结果"><a href="#扩大检索结果" class="headerlink" title="扩大检索结果"></a>扩大检索结果</h2><ul><li>模糊检索</li><li>使用不同表达方式（上位词）</li><li>使用通配符</li><li>不使用检索入口限制（年限、文献类型等）</li></ul><h2 id="缩小检索结果"><a href="#缩小检索结果" class="headerlink" title="缩小检索结果"></a>缩小检索结果</h2><ul><li>精确检索</li><li>查看主题词表，改用精确词条检索（下位词）</li><li>使用合适的布尔逻辑运算符</li><li>使用检索入口限制（年限、文献类型等）</li><li>使用数据库提供的过滤功能</li></ul><p><strong>解释：</strong>上位词与下位词的涵义</p><blockquote><p>“水果”是“苹果”的上位词<br>“苹果”是“水果”的下位词</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;math/tex; mode=display&quot;&gt;
检索式=关键词+逻辑运算符+搜索指令（语法）+...&lt;/script&gt;
    
    </summary>
    
    
    
      <category term="Information Science &amp; Technology  信息科学与技术" scheme="https://www.mozheyang.top/tags/Information-Science-Technology-%E4%BF%A1%E6%81%AF%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>国有战，召必回，战必胜</title>
    <link href="https://www.mozheyang.top/2020/02/03/2019ncov/"/>
    <id>https://www.mozheyang.top/2020/02/03/2019ncov/</id>
    <published>2020-02-03T03:24:43.000Z</published>
    <updated>2020-04-19T02:26:32.860Z</updated>
    
    <content type="html"><![CDATA[<p>昨天，2月2日，是全国法定春节延长假期的最后一天。人们已陆续返回工作岗位。<br>今天，2月3日，全国新增确诊2829例新冠肺炎病例，全国累计确诊17205例。</p><p><img src="https://www.mozheyang.top/images/2019ncov/2019ncov.png" alt=""></p><p><p class="refs">数据来源：https://news.qq.com/zt2020/page/feiyan.htm</p><br><a id="more"></a></p><p>当前挑战依旧严峻，压力大家都能感受得到，因此我不讨论目前我国在各方面所承受的压力。</p><blockquote><p>关关难过关关过。</p></blockquote><p>很多跟我一样的青年人，你们可能不是医生、护士，不是军人，不是调度员……<br>但我们仍可以做到传播真相，断绝谣言，有钱出钱，有力出力。<br>我希望我们不要人云亦云，不要被谣言动摇，也不要惊惶失措。<br><strong>我们需要的是解决方案，而不是恐慌。</strong></p><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1580710274231&amp;di=97ee2001cccc4806f503384984afbc80&amp;imgtype=0&amp;src=http%3A%2F%2Fbig5.gov.cn%2Fgate%2Fbig5%2Fwww.gov.cn%2Fxinwen%2Fsite1%2F20140310%2F7845c441d7d81487619106.jpg" alt=""></p><p>如今的武汉就像是我们与新冠病毒的主战场，<br>而我们正举全国之力，<br>以非军事化管理的队伍去尝试战胜这个看不见的狡猾藏匿的敌人。<br>即使面前是刀片，是子弹，是地狱，我们也要一往无前。</p><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1580710159891&amp;di=cebfe66720308b3307aea0ae438ae145&amp;imgtype=0&amp;src=http%3A%2F%2Fpics3.baidu.com%2Ffeed%2F242dd42a2834349bcf535383a1b90dc836d3be3c.jpeg%3Ftoken%3D68e14a96f28698f64805c91db93358ff%26s%3D3FC7985E4C84BCDC38238EAB0300A018" alt=""></p><p>最后，要坚信党领导的正确性。<br><strong>拧成一股绳的倔劲儿</strong>，是我们中国最大的优势。<br>我相信你们都能懂的。共勉。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天，2月2日，是全国法定春节延长假期的最后一天。人们已陆续返回工作岗位。&lt;br&gt;今天，2月3日，全国新增确诊2829例新冠肺炎病例，全国累计确诊17205例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.mozheyang.top/images/2019ncov/2019ncov.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;p class=&quot;refs&quot;&gt;数据来源：https://news.qq.com/zt2020/page/feiyan.htm&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
    
    
      <category term="Thought  随想" scheme="https://www.mozheyang.top/tags/Thought-%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>我的二〇一玖</title>
    <link href="https://www.mozheyang.top/2020/01/24/2019experience/"/>
    <id>https://www.mozheyang.top/2020/01/24/2019experience/</id>
    <published>2020-01-24T02:39:39.000Z</published>
    <updated>2020-04-19T02:26:32.860Z</updated>
    
    <content type="html"><![CDATA[<p>首先给大家拜个早年！祝大家新春快乐，鼠年大吉，万事顺利！</p><p><img src="https://www.mozheyang.top/images/photos/ice2020.jpg" alt=""></p><p>向博友们道歉。2019年的下半年，我有很长一段时间没有更新博客了。</p><a id="more"></a><p>我没有偷懒，我只是<strong>选择困难</strong>了。<br>以下正文。</p><p>2019年，国际局势变幻莫测；2019年，就业形势急转直下；2019年，还是我的本命年。要再算上这农历新年年末的新冠肺炎，2019，可谓我活着这么多年来，不能更特殊的一年。<br>这一年，我开始变得胆小，对很多事情感到害怕与敬畏；这一年，我又开始变得勇敢，对未来充满憧憬与期望。今天，我想与你分享我在2019年的经历与体悟。</p><h2 id="从实习说起"><a href="#从实习说起" class="headerlink" title="从实习说起"></a>从实习说起</h2><p>如果主业是我喜欢的事业，我又怎会心生退意呢？<br>在这里没有劝退的意思。但确实，我目前从事的研究并不是我内心所期待的。他没有那么夺目，也没有那么高深，他甚至也不能够创造一般人能看懂的价值。这对一个梦想成为工程师的我来说，不是一个有吸引力的选择。<br>于是我开始向一些头部企业投出实习简历，心想，本硕双985的学历，再怎么着也能拿到个面试机会吧？现实啪啪打脸教做人，十几份实习简历一点水花都没有。吃了专业和地域亏的我，欲哭无泪。还好本地的某一线合资车企最后收留了我，我非常感激。</p><p>看到高端大气自动化的产线，以及管理森严逼格高的研发车间，我仿佛已经看到了自己收割了秋招的offer的那一天，嘴角忍不住地45度上扬。<br>……<br>终于，历经了许多困难，我终于入职了。曾经的高大上也日渐习惯，一切归于平淡。</p><blockquote><p>“你不需要太考虑别人的感受。”<br>“选择你真正喜欢的工作。”</p></blockquote><p>在这里真的需要感谢我的直属上司Zhao。在我迷茫的时候给了我很多关键的意见。</p><h2 id="秋招的开始与结束"><a href="#秋招的开始与结束" class="headerlink" title="秋招的开始与结束"></a>秋招的开始与结束</h2><blockquote><p>“我相信你会有很大成就。”</p></blockquote><p>朋友的话仿佛一直在耳边。<br>我似乎很容易活在别人的期望当中。<br>终有一天，我无法再去满足他人的期望。我长大了。</p><p>秋招投出50+份简历，北京上海跑过不下5次。终于抓住了几次线下投递的机会，拿到了3个offer。<br>不是大家眼中的dream offer，却是比较适合我的offer。<br>不是特别满意的成绩。相比于从小到大的顺风顺水，科研和秋招给了我迄今为止，最大程度的挫败感。<br>在真正的生活面前，我很少有机会去主导自己的人生。但我可以让我走的下一步更趋近于我的目标。<br>我不会放弃。永远保持观望，never settle。</p><h2 id="在路上"><a href="#在路上" class="headerlink" title="在路上"></a>在路上</h2><blockquote><p>“你们有什么梦想？没有梦想，人生会过的很辛苦的。”</p></blockquote><p>Shang老师在席间的话，我一点没有惊慌，也没有害怕。<br>我无愧于自己，一直有自己想干的事。虽然别人可能不一定把这叫做梦想。<br>我希望未来能够<strong>做一些别人没有做过的事</strong>，还有能力<strong>帮助别人过的更开心</strong>。</p><p>熟悉我的人可能会知道，我有两大爱好：</p><ul><li>写脚本/程序</li><li>摄影/摄录</li></ul><p>可以总结一下，不论是计算机语言还是艺术语言，我感兴趣的都是<strong>一种语言</strong>。<br>我是个内向的人，“不善于”表达自己。但我又是个野心极大的人，很希望能够影响他人。<br>为了解决这个矛盾，我发掘了两大工具：<strong>控制语言（程序，理性）</strong>和<strong>表达语言（摄影，感性）</strong>。</p><p>本人压抑的性格很可能与家庭教育有关，塑造了独一无二的我。<br>从小就学会了压抑自己的欲望，压抑自己的需求，同时还要察言观色。<br>我活的很“好”，但不太快乐。我一定不想让自己的后代也跟我一样（如果有的话）。<br>我们无法选择自己的出身，但我们可以选择自己的未来。</p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>无厘头地说了很多，是我希望能够表达出自己的真实个性。<br>我不想再一直表现出“完美”的一面。因为再美的泡沫也终会破灭。<br>我也不用自卑，又有多少人不是在伪装呢？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先给大家拜个早年！祝大家新春快乐，鼠年大吉，万事顺利！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.mozheyang.top/images/photos/ice2020.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;向博友们道歉。2019年的下半年，我有很长一段时间没有更新博客了。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Thought  随想" scheme="https://www.mozheyang.top/tags/Thought-%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>从学术到工业 | 氧还原反应中的性能指标与实际燃料电池应用有何关系？</title>
    <link href="https://www.mozheyang.top/2019/06/16/ORRresearch2industry/"/>
    <id>https://www.mozheyang.top/2019/06/16/ORRresearch2industry/</id>
    <published>2019-06-16T14:00:33.000Z</published>
    <updated>2020-04-19T02:25:26.053Z</updated>
    
    <content type="html"><![CDATA[<p><strong>关键词：</strong>起始电位、极限扩散电流、燃料电池效率、燃料电池功率</p><a id="more"></a><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><blockquote><p> 一如科研深似海。</p></blockquote><p>这一方面是科学研究无边界的深度和广度所致，另一方面，也是由于我们自身思考的局限所致。</p><p>为什么这么说？</p><p>至少对国内的硕博士研究生来说，进入科研之后，我们就都面临着巨大的发文压力：满足毕业要求需要发文，评奖评优以发文为指标，在学术界生存那更是需要高质量的发文……久而久之，我们就都认识到了：文章（papers）是学术界的“<strong>硬通货</strong>”，与当今社会的<strong>一般等价物</strong>——货币，可以“相提并论”。</p><p>对于不擅长发文的同学们来说，其实还有另一条路可以选择——常常与学术界相对的工业界。</p><p>对大多数科研萌新来说，入门科研可能会经历以下历程（针对可工业化的科研方向）：</p><p>尝试理解文章逻辑-&gt;尝试理解测试指标-&gt;尝试掌握指标测试原理及方法-&gt;尝试理解其与工业产品指标的关系-&gt;优化产品设计</p><p>对工业界来说，创新性固然重要。但不同于学术界的任何意义上的创新，以实用为目的的创新，才是工业界真正急切需要的，也是目前中国所急切需要的。</p><p><img src="https://www.mozheyang.top/images/Electrocatalysis/ORRdefinition.png" alt="Typical ORR curve"></p><p class="refs">Ref: 周学俊. M-Nx/C类非贵金属氧还原催化材料的构筑及其电化学性能研究[D]. 东华大学, 2016.</p>笔者决定，针对自己的研究方向与目前研究热点，尝试讨论氧还原反应中极化曲线**起始电位（onset potential）**和**极限扩散电流密度（diffusion-limited current density）**所影响的燃料电池性能指标。希望能给各位从事新能源行业的新人们提供一些可以借鉴的思路。# 起始电位与燃料电池效率## 如何理解起始电位目前研究氧还原反应催化剂的文章中，起始电位（onset potential）是一个非常重要的指标。如果氧还原反应是一个**可逆**电化学反应，那么会有起始电位等于平衡电极电位$$E_{onset} = E_{eq}$$而平衡电极电位与反应的Gibbs自由能变化密切相关。如果有反应$$O_2 + 4H^++4e^- \to 2H_2O \quad 对应反应自由能变化\Delta G$$那么根据Gibbs自由能变化与平衡电极电势的关系有$$\Delta G = -nFE_{eq}$$即$$E_{eq} = -\frac{\Delta G}{nF}$$回到之前讨论的，燃料电池阴极上发生的氧还原反应比阳极上发生的燃料氧化反应慢好几个数量级，是一个不折不扣的**非可逆**电化学反应。如果将氧还原反应发生时所需过电势定义为$$\eta = |E_{onset} - E_{eq}|$$那么必须满足$\eta>0$且$E\_{onset}<E\_{eq}$才能使得氧还原反应发生。**氧还原反应发生所需的过电势越小，起始电位越正，就意味着该反应越趋向于可逆反应。**类比Carnot热机，可逆的热机效率更高，因为没有把更多的化学能变成难以回收的热能（根据热力学第二定律可知，孤立系统中熵从不减少，热总是不可逆地从高温向低温流动），从而提高热机的效率。燃料电池中减小过电势就是减少向热能转换的化学能，也是同样的道理。需要注意的是，以上我们所讨论的只是燃料电池中的阴极半反应（cathode reaction）。而燃料端阳极半反应（anode reaction）也可以用相同方法分析。不过，由于在燃料电池中阴极反应动力学要比阳极反应学慢几个数量级（例如在氢燃料电池中ORR比HER慢六个数量级），这也就以为着二者要达到反应速率匹配，阴极需要更大的过电势来驱动阴极反应的发生。过电势的增大导致了不可回收热的大量产生，从而降低燃料电池效率。这也就是目前学术界对燃料电池阴极反应——氧还原反应进行大量研究的原因。## 燃料电池效率定量地来看，燃料电池效率可以定义为输出电能与燃料消耗能量之间的比例，能量可以以功率（单位时间输出能量）表示：$$\delta = \frac{W_{elec}}{W_{fuel}} = \frac{P_{elec}}{P_{fuel}}$$根据法拉第定理$I=n N\_{fuel} F$，燃料消耗量与电流应该成正比，有$$P_{elec} = I \cdot V_{real} \\P_{fuel} = N_{fuel} \cdot \Delta H = \frac{I}{nF} \cdot \Delta H = V_{thermoneutral}$$代入燃料电池效率的计算公式，可得$$\delta = \frac{V_{real}}{V_{thermoneutral}} \times 100\%$$式中，$V\_{real}$是燃料电池实际能够输出的电压，$V\_{thermoneutral}$是基于热力学给出的燃料电池理论上能输出的电压。燃料消耗释放的能量，一部分用来做电功，一部分以熵增的形式释放，即产生热能。这是由反应的热力学本质所决定的，理想状态下自由能变可以全部用来做功$$\Delta H = \Delta G + T \Delta S = W_{elec} + T \Delta S$$![](https://www.mozheyang.top/images/ORRresearch2industry/fc_potential_distribution.png)<center><b>燃料电池内电势降分布示意图</b></center><p class="refs">Ref: Barbir F. PEM fuel cells: theory and practice[M]. Academic Press, 2012.</p>而事实上，自由能的一部分还会被燃料电池中的电势损耗消耗，如电化学极化、浓差极化等因素，所以一般地<center><p class="eqnBlock">$$\Delta H = (W_{elec} + \int_{0}^{worktime} \eta I \text{d}t) + T \Delta S$$</p></center>上式中每一项均大于等于零，因此一般实际的燃料电池的效率在40%到60%之间。# 极限扩散电流密度与燃料电池功率在电极动力学足够快时，氧还原反应电流被氧气传质速率所控制。在氧气扩散速率达到最大时，此时对应电流成为极限扩散电流（diffusion-limited current）。电极面积越大，便可以通过更大的电流。因此要研究材料本征性能，我们主要采用极限扩散电流密度（diffusion-limited current density）来描述材料的这类本征性能。根据功率计算公式$$P = V \times I$$在燃料电池实际输出电压可以确定之后，其可输出的功率实际由其电流决定。电流越大，燃料电池可以输出的功率越大。![NEV fuel cell](https://www.mozheyang.top/images/ORRresearch2industry/2016_Toyota_Fuel_Cell_Vehicle.jpg)<p class="refs">Sources: https://www.nerdwallet.com/blog/loans/2016-toyota-mirai-fuel-cell-test-drive/</p><p>对新能源汽车应用来说，极限扩散电流密度越大，以一定功率为指标，我们的燃料电池电堆（相当于汽车内燃机发动机）便可以做得更小。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Barbir F. PEM fuel cells: theory and practice[M]. Academic Press, 2012.</p><p>[2] 周学俊. M-Nx/C类非贵金属氧还原催化材料的构筑及其电化学性能研究[D]. 东华大学, 2016.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;关键词：&lt;/strong&gt;起始电位、极限扩散电流、燃料电池效率、燃料电池功率&lt;/p&gt;
    
    </summary>
    
    
      <category term="Industry  产业" scheme="https://www.mozheyang.top/categories/Industry-%E4%BA%A7%E4%B8%9A/"/>
    
    
      <category term="Chemistry  化学" scheme="https://www.mozheyang.top/tags/Chemistry-%E5%8C%96%E5%AD%A6/"/>
    
      <category term="Material  材料" scheme="https://www.mozheyang.top/tags/Material-%E6%9D%90%E6%96%99/"/>
    
      <category term="Catalysis  催化" scheme="https://www.mozheyang.top/tags/Catalysis-%E5%82%AC%E5%8C%96/"/>
    
      <category term="Fuel cell  燃料电池" scheme="https://www.mozheyang.top/tags/Fuel-cell-%E7%87%83%E6%96%99%E7%94%B5%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>极限扩散电流到底是不是材料的本征性能？ | 基于K-L方程的RDE表面液流理论</title>
    <link href="https://www.mozheyang.top/2019/03/31/LSV-KLeq/"/>
    <id>https://www.mozheyang.top/2019/03/31/LSV-KLeq/</id>
    <published>2019-03-31T02:10:32.000Z</published>
    <updated>2020-04-19T02:25:26.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>目前的主流研究认为，碱性环境中的氧还原反应（ORR）主要有两种反应途径。一种是四电子过程：</p><script type="math/tex; mode=display">\text{O}_2 + 2\text{H}_2 \text{O} + 4\text{e}^- = 4\text{OH}^-</script><p>一种是二电子过程：</p><script type="math/tex; mode=display">\text{O}_2 + 2\text{H}_2 \text{O} + 2\text{e}^- = 2\text{H}_2 \text{O}_2</script><a id="more"></a><p><strong>四电子过程</strong>可以保证在更短的时间内提供更大的电流，即四电子过程可以保证更大的电池（fuel cell/metal-air batteries）功率。氧还原反应的电化学性能测试常使用基于K-L方程的旋转圆盘电极（RDE）方法对反应转移电子数进行测算。</p><p><img src="https://www.mozheyang.top/images/Electrocatalysis/ORRdefinition.png" alt="Typical ORR curve"></p><p class="refs">Ref: 周学俊. M-Nx/C类非贵金属氧还原催化材料的构筑及其电化学性能研究[D]. 东华大学, 2016.</p><p>K-L方程实际上建立了极限扩散电流$i_l$与旋转圆盘转速等物理因素之间的关系。通过不同转速下测试极限扩散电流，便可以拟合出关键的反应动力学参数——转移电子数。那么极限扩散电流到底是不是材料的本征性质呢？这个问题没有想象的那么简单，笔者首先介绍了K-L理论后我们再作判断不迟。</p><h1 id="RDE下液流层的流体力学描述"><a href="#RDE下液流层的流体力学描述" class="headerlink" title="RDE下液流层的流体力学描述"></a>RDE下液流层的流体力学描述</h1><p>如下图，建立RDE的柱坐标系。z = 0处为圆盘电极表面。</p><p><img src="https://www.mozheyang.top/images/LSV_KLeq/RDEcoordinate.png" alt=""></p><p class="refs">Ref: Bard et al., Electrochemical Methods: Fundamentals and Applications; wiley New York, 1980; Vol. 2.</p><p>定义液流速度</p><script type="math/tex; mode=display">\vec{v} = (v_r, v_\phi, v_z)</script><p>已知：</p><ul><li><strong>圆盘表面</strong>液体流速满足$v_r=0, v_phi=0, v_y=\omega r$.</li><li><strong>本体溶液</strong>液体流速满足$v_r=0, v_phi=0, v_y=-U_0$.</li></ul><p>由<strong>稳态</strong>下的纳维-斯托克斯方程（Navier–Stokes equations）可描述<strong>柱坐标</strong>下不同方向液体流速之间的关系</p><script type="math/tex; mode=display">v_r + r \frac{\partial v_r}{\partial r} + r\frac{\partial v_z}{\partial z} = 0 \\v_r \frac{\partial v_r}{\partial r} - \frac{v_\phi^2}{r} + v_z \frac{\partial v_r}{\partial z} = -\frac{1}{\rho} \frac{\partial p}{\partial r} + v_\phi \left[ \frac{\partial^2 v_r}{\partial r^2} + \frac{\partial}{\partial r}(\frac{v_r}{r})+ \frac{\partial^2 v_r}{\partial z^2} \right] \\v_r \frac{\partial v_\phi}{\partial r} - \frac{v_r v_\phi}{r} + v_z \frac{\partial v_\phi}{\partial z} = v_\phi \left[ \frac{\partial^2 v_\phi}{\partial r^2} + \frac{\partial}{\partial r}(\frac{v_\phi}{r})+ \frac{\partial^2 v_\phi}{\partial z^2} \right] \\v_r \frac{\partial v_z}{\partial r} + v_z \frac{\partial v_z}{\partial z} = -\frac{1}{\rho} \frac{\partial p}{\partial z} + v_\phi \left[ \frac{\partial^2 v_z}{\partial r^2} + \frac{1}{r} \frac{\partial v_z}{\partial r}+ \frac{\partial^2 v_z}{\partial z^2} \right] \\</script><p class="refs">Ref: Real-Ramirez, C. A., & Gonzalez-Trejo, J. I. (2011). Hydrodynamic Analysis of Electrochemical Cells. In Computational Simulations and Applications. IntechOpen. </p><p>von Karman在1921年提出以独立无量纲变量来描述各方向速度值，可以满足N-S方程的限制条件，即</p><script type="math/tex; mode=display">\gamma = (\frac{\omega}{\mu})^{1/2} z</script><p>其中$\omega$为圆盘转速，$\mu$为液体粘度. 此时定义</p><script type="math/tex; mode=display">F(\gamma) = \frac{v_r}{r \omega}, G(\gamma) = \frac{v_\phi}{r \omega}, H(\gamma) = \frac{v_z}{\sqrt{\omega \mu}}\quad and \quad P(\gamma) = \frac{p}{\rho \mu \omega}</script><p>可将N-S方程简化为</p><script type="math/tex; mode=display">2F + H' = 0 \\F'' - HF' - F^2 + G^2 = 0 \\G'' - HG' - 2FG = 0 \\H'' - HH' - P' = 0</script><p>其边界条件为</p><script type="math/tex; mode=display">H = F = P = 0, G = 1 \quad at \quad z = 0 \\and \quad F = G = 0 \quad at \quad z = \infty \\</script><p class="refs">Ref: von Kármán, T. (1921). Über laminare und turbulente reibung. Zeitschrift für Angewandte Mathematik und Mechanik, 1, 486. </p><p>Chochran在1934年提出使用无穷级数方法近似表示$F, G, H$三个函数。在离电极表面较近处，即$z$较小时，$\gamma &lt;&lt; 1$，此时各方向速度值可表示为</p><script type="math/tex; mode=display">v_r = r \omega F(\gamma)= r \omega (a \gamma - \frac{\gamma^2}{2} - \frac{b \gamma^3}{3} + \cdots) \\v_\phi = r \omega G(\gamma)= r \omega (1 + b \gamma + \frac{a \gamma^2}{3} + \cdots) \\v_z =(\omega \mu)^{1/2} H(\gamma)= (\omega \mu)^{1/2} (-\alpha \gamma + \frac{\gamma^3}{3} + \frac{b \gamma^4}{6} + \cdots)</script><p>其中，$a=0.51026$，$b=-0.6159$。</p><p class="refs">Ref: Cochran, W. G. (1934). The flow due to a rotating disc. Proceedings of the Cambridge Philosophical Society, 30, 365-375. </p><p>在圆盘表面$z \rightarrow 0$，即$\gamma \rightarrow 0$，可以获得速度值表达式</p><script type="math/tex; mode=display">v_r = r \omega (a \gamma) = -0.51 \omega^{2/3} \mu^{-1/2} r z \\v_z = (\omega \mu)^{1/2} (-\alpha \gamma) = -0.51 \omega^{2/3} \mu^{-1/2} z^2</script><h1 id="RDE法向的物质对流及扩散"><a href="#RDE法向的物质对流及扩散" class="headerlink" title="RDE法向的物质对流及扩散"></a>RDE法向的物质对流及扩散</h1><p>柱坐标下的反应物的对流-扩散方程可以写为</p><script type="math/tex; mode=display">v_r (\frac{\partial C_o}{\partial r}) + \frac{v_\phi}{r} (\frac{\partial C_o}{\partial \phi})+ v_z (\frac{\partial C_o}{\partial z})= D_o [\frac{\partial^2 C_o}{\partial z^2}+ \frac{\partial^2 C_o}{\partial r^2}+ \frac{1}{r} (\frac{\partial C_o}{\partial r}) + \frac{1}{r^2}\frac{\partial^2 C_o}{\partial \phi^2}]</script><p>由于反应物浓度相对于RDE轴对称，即反应物浓度在$\phi$方向无差别，所以有</p><script type="math/tex; mode=display">\frac{\partial C_o}{\partial \phi}= \frac{\partial^2 C_o}{\partial \phi^2} = 0</script><p>在RDE表面径向上，在$0 \leq r \leq r_{disk}$，反应物浓度无差别，有</p><script type="math/tex; mode=display">\frac{\partial C_o}{\partial r}= \frac{\partial^2 C_o}{\partial r^2} = 0</script><p>因此可将反应物物质对流-扩散方程简化为</p><center><p class="eqnBlock">$$v_z (\frac{\partial C_o}{\partial z})= D_o \frac{\partial^2 C_o}{\partial z^2}$$</p></center><p>将$v_z= -0.51 \omega^{2/3} v^{-1/2} z^2$代入上式得</p><script type="math/tex; mode=display">\frac{\partial^2 C_o}{\partial z^2} = - \frac{z^2}{B} \frac{\partial C_o}{\partial z}</script><p>其中，$B = \frac{D_o \omega^{-3/2} v^{-1/2}}{0.51}$. 接下来的任务就是对该偏微分方程进行积分处理，尝试求解。可以先令$X = \frac{\partial C_o}{\partial z}$，有</p><script type="math/tex; mode=display">\frac{\partial X}{\partial z} = - \frac{z^2}{B} X</script><p>两边积分可解得</p><script type="math/tex; mode=display">\frac{X}{X_0} = \exp(-\frac{z^3}{3B})</script><p>再将$X = \frac{\partial C_o}{\partial z}$带回，有</p><script type="math/tex; mode=display">\frac{\partial C_o}{\partial z} = (\frac{\partial C_o}{\partial z})_{z=0} \exp(-\frac{z^3}{3B})</script><p>这时候即将对该式进行二次积分。但是该次积分积分限的选取具有不同的物理意义。一种情形是电极表面的反应动力学很快，反应物一到电极表面就转化为产物，电极表面反应物浓度为零的情形。这种情况下，电流仅受到物质扩散传质的限制，我们称之为“<strong>极限电流情形</strong>”。另一种情形是电极表面的反应动力学没有那么快，电极表面反应物浓度不为零的情形，我们称之为“<strong>非极限电流情形</strong>”。接下来我们就来讨论分别描述这两种情形的<strong>Levich方程</strong>和<strong>Koutecky-Levich方程</strong>。</p><h2 id="极限电流情形"><a href="#极限电流情形" class="headerlink" title="极限电流情形"></a>极限电流情形</h2><p>在<strong>极限电流</strong>情形下，电极表面反应物浓度<strong>为零</strong>，则</p><script type="math/tex; mode=display">\int_0^{C_o^*} dC_o = (\frac{\partial C_o}{\partial z})_{z=0} \int_0^\infty \exp(-\frac{z^3}{3B}) dz</script><p>有定积分</p><script type="math/tex; mode=display">\exp(a z^3) dz = (-a)^{1/3} \Gamma(\frac{4}{3}) = 0.8934(-a)^{1/3}</script><p>其中$\Gamma$函数为</p><script type="math/tex; mode=display">\Gamma(x) = \int_0^\infty t^{x-1} e^{-t} dt</script><p>其在[0,3]区间的函数图像如下</p><p><img src="https://www.mozheyang.top/images/LSV_KLeq/GammaFunc.png" alt=""></p><p>故</p><script type="math/tex; mode=display">C_o^* = (\frac{\partial C_o}{\partial z})_{z=0} 0.8934(3B)^{1/3}= (\frac{\partial C_o}{\partial z})_{z=0} 0.8934(\frac{3D_o \omega^{-3/2} \mu^{1/2}}{0.51})^{1/3}</script><p>又因为电流与电极表面的物质流量相关，由法拉第定律可得</p><script type="math/tex; mode=display">i = nFAD_o (\frac{\partial C_o}{\partial z})_{z=0}</script><p>与上式联立可得Levich方程</p><center><p class="eqnBlock">$$i_l = 0.62 nFAD^{2/3} \omega^{1/2} \mu^{-1/6} C_o^*$$</p></center><p>从上式我们已经可以知道，对特定电极反应（转移电子数n不变），<strong>极限扩散电流是旋转圆盘转速的函数</strong>——因为法拉第常数$F$、电极面积$A$、圆盘尺寸、电解液中反应物扩散系数$D$、电解液粘度$\mu$和电解液浓度$C_o^*$都是恒定的。对不同材料，氧还原所经历路径不同，也就可能导致电极表面的电极反应不同，会反应在转移电子数上，从而导致极限扩散电流的不同。因此，本文的结论就是，在正确的表征方法下，<strong>极限扩散电流是材料的本征性质</strong>（活性位点催化选择反应路径的性质）。</p><h2 id="非极限电流情形"><a href="#非极限电流情形" class="headerlink" title="非极限电流情形"></a>非极限电流情形</h2><p>在<strong>非极限电流</strong>情形下，电极表面反应物浓度<strong>不为零</strong>，则</p><script type="math/tex; mode=display">\int_{C_o(z=0)}^{C_o^*} dC_o = C_o^* - C_o(z=0)= (\frac{\partial C_o}{\partial z})_{z=0} \int_0^\infty \exp(-\frac{z^3}{3B}) dz</script><p>且$C_o(z=0) \neq 0$. 同极限电流情形进行积分可得</p><script type="math/tex; mode=display">i_l = 0.62 nFAD^{2/3} \omega^{1/2} \mu^{-1/6} [C_o^* - C_o(z=0)]</script><p>由Levich方程可得</p><script type="math/tex; mode=display">i = i_l [\frac{C_o^* - C_o(z=0)}{C_o^*}]</script><p>对单步骤完全不可逆反应过程有</p><script type="math/tex; mode=display">i = nFAk_f(E)C_o(z=0)</script><p>其中反应速率常数$k_f(E) = k_0 \exp[-\alpha f(E-E^\Theta)]$可由反应动力学B-V方程导出。那么该式与上式联立可得</p><script type="math/tex; mode=display">i = nFAk_f(E) C_o^*(1-\frac{i}{i_l})</script><p>可以定义</p><script type="math/tex; mode=display">i_k = nFAk_f(E)C_o^*</script><p>那么便有Koutecky-Levich方程</p><center><p class="eqnBlock">$$\frac{1}{i} = \frac{1}{i_k} + \frac{1}{i_l} = \frac{1}{i_k} + \frac{1}{0.62 nFAD^{2/3} \omega^{1/2} \mu^{-1/6} C_o^*}$$</p></center><p>从上式我们可以看出，Levich方程所描述的极限电流情形是Koutecky-Levich方程中$i_k \rightarrow \infty$时的情形。K-L方程的物理意义是：<u><strong>在无表面修饰的电极上，总电流主要由反应动力学导致的电流$i_k$和传质所导致的电流$i_l$构成。</strong></u></p><p><img src="https://www.mozheyang.top/images/Electrocatalysis/KLplot.png" alt="K-L plot"></p><p>如果电极的表面物理化学性质发生变化（也即电极经过表面修饰），那么反应的转移电子数必定会发生变化，从而反映在K-L拟合直线的<strong>斜率</strong>上。当然，这个变化也会反映在拟合直线的<strong>截距</strong>$\frac{1}{i_k}$上，但其中含有$k_f(E)$这一不易确定的反应动力学参数，所以其不容易被定量分析。</p><p>理论上可以通过取不同电压的电流和转速作图，便能够获得不同电压的转移电子数。要更明确地得到不同电位下的转移电子数，需要采用旋转环盘电极（RRDE）方法。旋转环盘电极方法在笔者之前的博文中有介绍其原理（<a href="https://www.mozheyang.top/2018/02/15/ORRbasic/">氧还原反应（Oxygen Reduction Reaction）基础</a>）。</p><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>总结本文得到的结论：</p><ul><li>如果电极的表面物理化学性质发生变化（也即电极经过表面修饰），那么反应的转移电子数必定会发生变化，从而反映在K-L方程拟合直线的<strong>斜率</strong>和<strong>截距</strong>上。</li><li>在正确的表征方法下，<strong>极限扩散电流是材料的本征性质</strong>（活性位点催化选择反应路径的性质）。</li><li>负载量可能会<strong>通过活性位点暴露</strong>的角度对极限扩散电流产生影响。但在一定范围内，其影响可能是不大的。</li><li><p>在ORR测试中，需要通过K-L方程计算不同偏压下的转移电子数。这时候一定要注意各数值的<strong>量纲</strong>问题！在转速使用“rpm”（Revolutions Per Minute，圈/分）时，<strong>常数取“0.2”</strong>，[5] 即使用公式：$i_l = 0.2 nFAD_o^{2/3} \omega^{1/2} \mu^{-1/6} C_o^*$；在转速使用“rad/s”（Radian Per Second，弧度/秒）时，<strong>常数取“0.62”</strong>，[6] 即使用公式：$i_l = 0.62 nFAD_o^{2/3} \omega^{1/2} \mu^{-1/6} C_o^*$（如果纵坐标已经取电流密度，记得将等式右边的A略掉）。 </p></li><li><p>ORR计算常用物理常数：法拉第常数$F=96485 C mol^{-1}$，氧气在电解液中的饱和浓度$C_o = 1.2 \times 10^{-3} mol L^{-1}$，氧气在KOH溶液中的扩散系数$D_o = 1.9 \times 10^{-5} cm s^{-1}$，电解液粘度$\mu = 0.01 cm^2 s^{-1}$. </p></li></ul><p>总之，极限扩散电流影响因素较多，非预期的实验结果一定要仔细分析！</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Bard, A. J., Faulkner, L. R., Leddy, J., &amp; Zoski, C. G. (1980). Electrochemical methods: fundamentals and applications (Vol. 2). New York: wiley.</p><p>[2] Real-Ramirez, C. A., &amp; Gonzalez-Trejo, J. I. (2011). Hydrodynamic Analysis of Electrochemical Cells. In Computational Simulations and Applications. IntechOpen.</p><p>[3] von Kármán, T. (1921). Über laminare und turbulente reibung. Zeitschrift für Angewandte Mathematik und Mechanik, 1, 486.</p><p>[4] Cochran, W. G. (1934). The flow due to a rotating disc. Proceedings of the Cambridge Philosophical Society, 30, 365-375.</p><p>[5] Han S, Hu X, Wang J, et al. Novel Route to Fe‐Based Cathode as an Efficient Bifunctional Catalysts for Rechargeable Zn–Air Battery[J]. Advanced Energy Materials, 2018, 8(22): 1800955.</p><p>[6] Liang Y, Li Y, Wang H, et al. Co 3 O 4 nanocrystals on graphene as a synergistic catalyst for oxygen reduction reaction[J]. Nature materials, 2011, 10(10): 780-786.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;目前的主流研究认为，碱性环境中的氧还原反应（ORR）主要有两种反应途径。一种是四电子过程：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\text{O}_2 + 2\text{H}_2 \text{O} + 4\text{e}^- = 4\text{OH}^-&lt;/script&gt;&lt;p&gt;一种是二电子过程：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
\text{O}_2 + 2\text{H}_2 \text{O} + 2\text{e}^- = 2\text{H}_2 \text{O}_2&lt;/script&gt;
    
    </summary>
    
    
      <category term="Electrochemistry  电化学" scheme="https://www.mozheyang.top/categories/Electrochemistry-%E7%94%B5%E5%8C%96%E5%AD%A6/"/>
    
    
      <category term="Chemistry  化学" scheme="https://www.mozheyang.top/tags/Chemistry-%E5%8C%96%E5%AD%A6/"/>
    
      <category term="Material  材料" scheme="https://www.mozheyang.top/tags/Material-%E6%9D%90%E6%96%99/"/>
    
      <category term="Catalysis  催化" scheme="https://www.mozheyang.top/tags/Catalysis-%E5%82%AC%E5%8C%96/"/>
    
      <category term="Model  模型" scheme="https://www.mozheyang.top/tags/Model-%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>块体金属变成单个原子？ | 单原子催化剂的大规模制备</title>
    <link href="https://www.mozheyang.top/2019/03/19/BulkMetal2SAC/"/>
    <id>https://www.mozheyang.top/2019/03/19/BulkMetal2SAC/</id>
    <published>2019-03-19T14:21:49.000Z</published>
    <updated>2020-04-19T02:25:25.999Z</updated>
    
    <content type="html"><![CDATA[<p>由于单原子催化剂上金属原子在载体上的分散特点，导致其与块体金属在物理化学方面的性质上产生差异。这种差异往往使得单原子催化剂在各类催化反应上具有较为优异的催化性能。既然单原子催化剂在（能源）催化领域具有如此巨大的吸引力，那么其合成就自然成为了目前能源材料科研和产业界所共同关注的一大焦点问题。</p><a id="more"></a><p>目前应用于单原子催化剂制备的方法主要分为物理方法和化学方法。<strong>物理方法</strong>会使用原子层沉积或者高频激光脉冲设备，而这些设备往往较为昂贵的研究设备，不易普及。<strong>化学方法</strong>主要使用框架化学中的金属有机框架化合物（Metal Organic Framework, MOF）或共价有机框架化合物（Covalence Organic Framework, COF）作为后续高温煅烧前驱体，制备氮掺杂碳作为载体的单原子催化剂。这种方法主要存在两方面问题：第一是框架化合物的反应物较为昂贵，合成步骤也较为复杂，不利于扩大单原子催化剂的生产；第二，分散金属原子在高温煅烧下容易发生团聚，从而降低最后产物的金属原子分散程度。总之，目前需要一种廉价且易于普及的批量生产单原子催化剂的方法。</p><p><strong>中国科学技术大吴宇恩老师课题组</strong>专注于单原子催化剂的合成与应用，近年来产出了大量代表性成果。其中比较吸引笔者的是最近两年有关于使用块体金属制备单原子催化剂的系列文章。这种方法思路新颖，制备简单，具有工业化生产的潜力。</p><h1 id="铜单原子催化剂与其氧还原反应催化活性"><a href="#铜单原子催化剂与其氧还原反应催化活性" class="headerlink" title="铜单原子催化剂与其氧还原反应催化活性"></a>铜单原子催化剂与其氧还原反应催化活性</h1><p>利用铜与常见MOF——ZIF-8在氨气气氛下高温共热，可以制备铜单原子催化剂。这是因为在高温下，氨气能与铜表面原子通过强的路易斯酸作用络合，形成挥发性的Cu(NH<sub>3</sub>)<sub>X</sub>。而Cu(NH<sub>3</sub>)<sub>X</sub>又会被高温下充分石墨化的ZIF-8缺陷碳所捕获，从而形成铜原子在缺陷碳上负载的单原子催化剂。本工艺中关键的一点是<strong>铜在高温下会与氨气形成可挥发性络合物</strong>。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/prepareCuSAC.png" alt="CuSAC"></p><p>同步辐射光源在原子级别表征中正起到越来越重要的作用。这主要是因为同步辐射光源可调制<strong>波长范围较大</strong>，且<strong>连续性好</strong>。我们知道，<strong>化学键的特征运动导致了能量的特征吸收</strong>，如果可以利用更宽广的光源能量范围，就意味着可以探测更为丰富的化学键。这就是目前同步辐射光源在单原子催化剂表征中不可或缺地位的原因所在。更多关于材料表征技术的知识，可以查看笔者总结的课程回顾内容《<a href="https://www.mozheyang.top/2017/12/27/2017AFinal/">回首2017 | 课程知识回顾</a>》中催化作用基础相关内容，如《<a href="https://www.mozheyang.top/documents/%E5%82%AC%E5%8C%96%E8%A1%A8%E5%BE%81%E6%96%B9%E6%B3%95.pdf">催化表征方法思维导图</a>》。</p><p>通过同步辐射光源的相关分析可以发现在制备的单原子分散样品（Cu-SAs/N-G和Cu-SAs/N-C）中均无明显Cu-Cu键，取而代之的是铜原子与基底形成的Cu-N/C键。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/xanesCuSAC.png" alt="xanesCu"></p><p>通过该方法制备的铜单原子催化剂在氧还原反应中具有优异表现。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/ORRCuSAC.png" alt="ORRCu"></p><h1 id="镍单原子催化剂与其电还原二氧化碳催化活性"><a href="#镍单原子催化剂与其电还原二氧化碳催化活性" class="headerlink" title="镍单原子催化剂与其电还原二氧化碳催化活性"></a>镍单原子催化剂与其电还原二氧化碳催化活性</h1><p>与之前的铜单原子催化剂的制备工艺略有不同。铜原子是被载气氨气裹挟着来到缺陷碳上，而镍“单原子”催化剂是三聚氰胺转化的氮化碳在镍金属片上生长制备而成的，是一个金属“渗碳”的逆过程——碳“渗”金属镍。最后所得到的镍单原子催化剂是酸蚀镍金属片而得，可以想象，其金属间成键的概率一定会比金属原子跑到碳载体上要大得多。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/prepareNiSAC.png" alt="NiSAC"></p><p>这一猜想可以从同步辐射光源的相关分析中得到验证。</p><p>直接剥离而未经酸蚀的碳层文中将其命名为（Freshly prepare carbon papers, F-CPs），剥离后再经过酸蚀得到的碳层样品文中称其为（Hierarchical carbon papers, H-CPs）。Emmm…反正无定型的碳都可以叫层级结构“Hierarchical structure”吧，当然孔结构丰富的碳（既有micro-pores，又有meso-pores）就更为名副其实啦。可以想象，酸蚀后的碳一定是具有丰富孔结构的。</p><p>在F-CPs中Ni-Ni键比纯镍片要稍微低一些，经过酸蚀的H-CPs样品又相对于F-CPs具有更低的Ni-Ni键强度，说明镍金属在酸蚀过程中损失，从而导致Ni-Ni键更弱了。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/xanesNiSAC.png" alt="xanesNi"></p><p>镍单原子催化剂电还原二氧化碳产一氧化碳的活性，与之前催化剂相比具有极大优势，尤其是在CO的法拉第电流密度方面。而且这种电流密度增长几乎与负偏压成正比，这无疑在工业化的大规模电解还原过程中是一个有利的特点。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/ECRNiSAC.png" alt="ECRNiSAC"></p><h1 id="钴单原子催化剂与其多反应催化性能"><a href="#钴单原子催化剂与其多反应催化性能" class="headerlink" title="钴单原子催化剂与其多反应催化性能"></a>钴单原子催化剂与其多反应催化性能</h1><p>钴基催化剂在OER，ORR和HER三个反应中屡建奇功，因此如何将其规模化制备是一个有趣的研究课题。钴单原子催化剂的制备与镍单原子催化剂的制备没有太大差别，同样基于三聚氰胺在金属片上的生长与反渗透过程——碳渗金属钴。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/prepareCoSAC.png" alt="CoSAC"></p><p>从其同步辐射相关分析中可以看出，其也并非严格的单原子催化剂。其原因我们在上面的镍“单原子”催化剂文章中也已经讨论过了。很明显，该催化剂是在基底上分散着钴原子簇。这些原子簇存在使得其具有催化多种能源催化反应的特点。让笔者感到有些疑惑的是文中没有解释是否有Co-N键的存在，而只是利用同步辐射强调了Co-Co键的存在…杀鸡焉用牛刀？于是笔者怀疑，这可能是一个合成失败的材料（实验重复性可还行？），无奈性能好啊，还是可以发好文章[闭嘴==]。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/xanesCoSAC.png" alt="xanesCo"></p><p>接下来必有老套的ORR，OER和HER三连。虽然“bifunctional”（双功能）和“trifunctional”（三功能）是有些老套了，但是笔者想，这其实也有其背后的科学问题——目前新能源（转化）领域的多个反应居然都可以被同样体系的催化剂（材料）制服，这是否说明我们离<strong>大一统</strong>的目标不远了呢？那么向大一统多前进一步总归是没错的吧，于是可预见的未来还可能会出现“tetrafunctional”（四功能），“pentafunctional”（五功能）…又可以毕业几批学生了呢，开❤。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/TriFuncCo.png" alt="TriFuncCo"></p><p>其实ORR，OER和HER可以被同一个体系材料所征服还不是最令人费解的。</p><p>令人费解的是HER这个与NRR（或NER）和ECR竞争的反应，其催化剂体系被广泛应用于NRR和ECR。这意味着，我们对催化剂活性位点<strong>根本一无所知</strong>！不同的合成路径，合成一个化学成分基本相同的，甚至缺陷结构（目前所能够表征的）都是类似的材料，为什么会产生几乎是相互矛盾的效果？！！</p><p>难受！！！</p><h1 id="铂单原子催化剂与其氢析出反应催化活性"><a href="#铂单原子催化剂与其氢析出反应催化活性" class="headerlink" title="铂单原子催化剂与其氢析出反应催化活性"></a>铂单原子催化剂与其氢析出反应催化活性</h1><p>最开始做的是非贵金属，为什么现在又转回来做贵金属了呢？可能是因为能试的金属都还在一个个试吧。大家可以看着抓抓紧。一种金属一篇文章，加油。</p><p>利用铂网（经费在燃烧…）、双氰胺（Dicyandiamide ，DCD ）和氧化石墨烯（GO）在惰性气氛下高温共热，可以制备铂单原子催化剂。这是因为在高温下，双氰胺释放出氨气，与铂网表面原子通过强的路易斯酸作用络合，形成挥发性的Pt(NH<sub>3</sub>)<sub>X</sub>。而Pt(NH<sub>3</sub>)<sub>X</sub>又会被氧化石墨烯所氧化捕获（其实要说是氧化还原石墨烯上的缺陷捕获铂原子是否也有道理呢？毕竟Pt<sup>0</sup>也并不是容易反应形成化学键的，虽然氨气络合对铂原子的作用不可小觑），从而形成铂原子在缺陷碳上负载的单原子催化剂。</p><p>这一部分内容似曾相识…对，与铜单原子催化剂的制备原理基本相同。但是可能考虑到铂比较贵，在封闭空间反应吧，还是不通氨气了，不然都被载气带走了真的很浪费…而且附着在石英管上的铂该怎么办？很容易影响后来的高温反应，回收也是很不方便了。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/preparePtSAC.png" alt="PtSAC"></p><p>金属原子跑到碳载体上，其单原子效应应该是比较明显的。这可以从下图看出来，笔者就不再分析了，感兴趣的读者可以阅读原文。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/xanesPtSAC.png" alt="xanesPt"></p><p>那，试了很多反应之后，还是HER最奏效。好吧，毕竟贵金属，总应该有点效果的。</p><p>要不然真对不起“燃烧”的经费。</p><p><img src="https://www.mozheyang.top/images/BulkMetal2SAC/HERPtSAC.png" alt="HERPt"></p><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>一招鲜，吃遍天。</p><p>光靠块体金属合成单原子催化剂就出了多少好文章啊。虽然这个方法的思想是非常巧妙的，但是后来跟进的研究未免有些filling gaps的嫌疑。</p><p>不管怎么说，都还是大师之作啊。</p><p>如果你对本文中的内容有任何不同见解，欢迎指教！</p><p>Email: mozheyang@outlook.com</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>(1) Qu, Y.; Li, Z.; Chen, W.; Lin, Y.; Yuan, T.; Yang, Z.; Zhao, C.; Wang, J.; Zhao, C.; Wang, X.; et al. Single Sites Via Emitting and Trapping of Atoms. Nat. Catal. 2018, 1 (October), 781–786.</p><p>(2) Zhang, Q.; Zhao, C.; Wang, Y.; Li, Y.; Yuan, T.; Xi, D.; Wang, X.; Duan, H.; Luo, J.; Xu, Q.; et al. Solid-Diffusion Synthesis of Single-Atom Catalysts Directly from Bulk Metal for Efficient CO2 Reduction. Joule 2018, 1–11.</p><p>(3) Yang, Z.; Zhao, C.; Qu, Y.; Zhou, H.; Zhou, F.; Wang, J.; Wu, Y.; Li, Y. Trifunctional Self-Supporting Cobalt-Embedded Carbon Nanotube Films for ORR, OER, and HER Triggered by Solid Diffusion from Bulk Metal. Adv. Mater. 2019, 1808043, 1–8.</p><p>(4) Qu, Y.; Chen, B.; Li, Z.; Duan, X.; Wang, L.; Lin, Y.; Yuan, T.; Zhou, F.; Hu, Y.; Yang, Z.; et al. Thermal Emitting Strategy to Synthesize Atomically Dispersed Pt Metal Sites from Bulk Pt Metal. J. Am. Chem. Soc. 2019, jacs.8b09834.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于单原子催化剂上金属原子在载体上的分散特点，导致其与块体金属在物理化学方面的性质上产生差异。这种差异往往使得单原子催化剂在各类催化反应上具有较为优异的催化性能。既然单原子催化剂在（能源）催化领域具有如此巨大的吸引力，那么其合成就自然成为了目前能源材料科研和产业界所共同关注的一大焦点问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Electrochemistry  电化学" scheme="https://www.mozheyang.top/categories/Electrochemistry-%E7%94%B5%E5%8C%96%E5%AD%A6/"/>
    
    
      <category term="Chemistry  化学" scheme="https://www.mozheyang.top/tags/Chemistry-%E5%8C%96%E5%AD%A6/"/>
    
      <category term="Material  材料" scheme="https://www.mozheyang.top/tags/Material-%E6%9D%90%E6%96%99/"/>
    
      <category term="Catalysis  催化" scheme="https://www.mozheyang.top/tags/Catalysis-%E5%82%AC%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>什么是“法拉第效率”？NRR和ECR中的一个重要指标</title>
    <link href="https://www.mozheyang.top/2019/03/03/FaradayEfficiency/"/>
    <id>https://www.mozheyang.top/2019/03/03/FaradayEfficiency/</id>
    <published>2019-03-03T06:37:18.000Z</published>
    <updated>2020-04-19T02:25:26.002Z</updated>
    
    <content type="html"><![CDATA[<p>题目中的NRR（Nitrogen Reduction Reaction）对应的是氮气（电）还原反应，ECR（Electrochemical Carbon dioxide Reduction）对应的是二氧化碳电还原反应。在不同电压下，电催化剂产生所期望产物的法拉第效率（Faraday efficiency, FE），成为了考察该催化剂电催化性能的一个重要指标，与起始电位（Onset potential）和一定电位下所能达到的总电流密度（Current density）并驾齐驱。在介绍“法拉第效率”这个概念之前，我们首先来回顾什么是“法拉第定律”。</p><a id="more"></a><h1 id="法拉第定律、法拉第电流与法拉第效率的关系"><a href="#法拉第定律、法拉第电流与法拉第效率的关系" class="headerlink" title="法拉第定律、法拉第电流与法拉第效率的关系"></a>法拉第定律、法拉第电流与法拉第效率的关系</h1><p>法拉第定律建立了宏观电荷量/电流和化学反应导致的微观电子转移之间的联系。</p><script type="math/tex; mode=display">Q=NF</script><p>等式两边同时对时间求导数可得</p><script type="math/tex; mode=display">i = \frac{dQ}{dt} = \frac{dN}{dt}F = nF</script><p>法拉第电流（$i_f$），顾名思义，就是化学反应过程导致电子转移，这部分电子所对应的电流。</p><p>那除了法拉第电流，我们在实际测试中得到的总电流还有非法拉第电流，其中大部分可以认为是电极双电层的充电电流（$i_c$），如上图。关于电极双电层结构的数学模型可以参见博文（<a href="https://www.mozheyang.top/2017/10/22/EClecturenote3/">课后回顾 | 双电层结构</a>）。简单地来说，在固液界面两边会积累电荷，这些电荷空间距离较近，却无法穿越界面进行结合，像极了平行板电容器。因此双电层电流可以看作该电容器的充电电流。需要注意的是，电极表面修饰会对双电层充电电流产生影响。</p><p><img src="https://www.mozheyang.top/images/FE/Double_Layer.png" alt=""></p><script type="math/tex; mode=display">i_{total} =f(i_f, i_c) \approx i_f + i_c</script><p>以上的关系必定是十分粗略而且非定量的，法拉第电流和双电层充电电流都会随时间和施加偏压的变化而变化。当电压一定时，不存在双电层充电电流，即$i_c = 0$，那么</p><script type="math/tex; mode=display">i_{total} \approx i_f</script><p>注：电化学测试可以获得的信息是十分丰富的，部分技巧甚至具有较深厚的数理背景。如果希望对CV和LSV曲线中的电流了解得更多更深入，可以关注笔者后续的博文：<a href="https://www.mozheyang.top/2019/03/31/LSV-KLeq/">极限扩散电流到底是不是材料的本征性能？ | 基于K-L方程的RDE表面液流理论</a>。</p><p>在水中（被施加负压的一极）阴极，在电压足够负的情况下只发生氢析出反应，那么产物也就只有$H_2$。在氮气还原反应中，由于氢气析出所需电位比氮气还原所需电位较正，于是在氮气还原发生的过程中，有很大可能氢气析出反应也是同时发生的（另外很小可能：电催化剂极大减小了氮气还原所需要的负偏压导致氮气还原所需电位比氢气析出正），气相产物还是只有$H_2$，但液相中产物可能会有$NH_4^+$（产生氨气然后溶于电解液中）和$N_2H_4$；在二氧化碳还原反应中，可能的产物会更复杂，气相产物可能有$H_2$、$CO$、$CH_4$、$C_2H_4$……而液相产物又可能有$HCOOH$、$CH_3COOH$、$EtOH$（乙醇）、$n-PrOH$（异丙醇）……</p><p><img src="https://www.mozheyang.top/images/FE/ECRpotential.png" alt=""></p><p class="refs">注：以上部分反应看似具有比氢气析出更正的电位，但实际上，二氧化碳分子还原几乎都必须经过生成羰基自由基CO*的过程，该反应对应的电极电势为-1.90 V (vs. SHE，水溶液). Ref: Sun, Z.; Ma, T.; Tao, H.; Fan, Q.; Han, B. Fundamentals and Challenges of Electrochemical CO2Reduction Using Two-Dimensional Materials. Chem 2017, 3 (4), 560–587.</p><p>所以法拉第电流部分可以由多个不同产物的法拉第电流组成。对于氮气还原反应：</p><script type="math/tex; mode=display">i_{total} = i_f = i_{H_2} + i_{NH_4^+} + i_{N_2H_4}</script><p>对于二氧化碳还原反应：</p><script type="math/tex; mode=display">i_{total} = i_f = \{i_{H_2} + i_{CO} + i_{CH_4} + i_{C_2H_4}\}_{gas}+ \{i_{HCOOH} + i_{CH_3COOH} + i_{EtOH} + i_{n-PrOH}\}_{liquid}</script><p>所以针对某种产物，比如铵根在氮气还原反应中的法拉第效率，其表达式可以写为</p><script type="math/tex; mode=display">FE = \frac{i_{NH_4^+}}{i_{f}} = \frac{i_{NH_4^+}}{i_{total}}</script><h1 id="不同情况下法拉第效率的具体计算方法"><a href="#不同情况下法拉第效率的具体计算方法" class="headerlink" title="不同情况下法拉第效率的具体计算方法"></a>不同情况下法拉第效率的具体计算方法</h1><p>在不同情况下我们都可以依据<strong>物质守恒定律</strong>，结合法拉第定律对法拉第效率建立合理的计算方法。物质守恒定律简单说来就是，若计算平均法拉第效率，那我们便使用一段时间内转移的电子总数求平均后进行计算；若计算瞬时（单位时间）法拉第效率，那我们便用该单位时间下转移的电子个数进行计算。</p><h2 id="平均法拉第效率"><a href="#平均法拉第效率" class="headerlink" title="平均法拉第效率"></a>平均法拉第效率</h2><p>在一定反应时间段内，若某产物的法拉第效率可基本视为恒定（稳定性较好的催化剂，如目前最好的碳基催化剂），那么可以依据以下方法计算该段时间内的对应该产物的<strong>平均法拉第速率</strong></p><script type="math/tex; mode=display">FE = \frac{产物所对应的转移电荷}{总共消耗的电荷}</script><p>由于即使在同一电位下，仍不存在严格恒定的产物法拉第效率，因此目前文献中多用瞬时法拉第效率。</p><h2 id="瞬时法拉第效率"><a href="#瞬时法拉第效率" class="headerlink" title="瞬时法拉第效率"></a>瞬时法拉第效率</h2><p>在法拉第效率不恒定的情况下（稳定性较差的催化剂，如多数金属催化剂），可以依据以下方法计算一段时间内的<strong>瞬时法拉第效率</strong></p><script type="math/tex; mode=display">j_i = n_i F A^{-1} = x_i \times v \times \frac{z_i F p_0}{RT} \times A^{-1} \\FE = \frac{j_i}{j_{total}} \times 100\%</script><p>由上式，$n_i$代表的是单位时间、单位电极面积由于i物种生成所引起的电子转移个数，其与i物种对应电流密度$j_i$之间的关系便可以通过法拉第定律进行描述。式中$v$为气体流速 (mol min<sup>-1</sup>)，$z_i$为每1单位$i$物种生成导致的电子转移个数，$P_0$为标准大气压，$F$和$R$分别为法拉第常数和气体常数（法拉第常数 $F=96485 \quad C \cdot mol^{-1}$，气体常数$R = 8.314 \quad J \cdot mol^{-1} \cdot K^{-1}$）。$i$物种的法拉第效率最终等于$i$物种电流密度与总电流密度之比。</p><p class="refs">Ref: Jiang K, Sandberg R B, Akey A J, et al. Metal ion cycling of Cu foil for selective C–C coupling in electrochemical CO<sub>2</sub> reduction[J]. Nature Catalysis, 2018, 1(2): 111.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目中的NRR（Nitrogen Reduction Reaction）对应的是氮气（电）还原反应，ECR（Electrochemical Carbon dioxide Reduction）对应的是二氧化碳电还原反应。在不同电压下，电催化剂产生所期望产物的法拉第效率（Faraday efficiency, FE），成为了考察该催化剂电催化性能的一个重要指标，与起始电位（Onset potential）和一定电位下所能达到的总电流密度（Current density）并驾齐驱。在介绍“法拉第效率”这个概念之前，我们首先来回顾什么是“法拉第定律”。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Electrochemistry  电化学" scheme="https://www.mozheyang.top/categories/Electrochemistry-%E7%94%B5%E5%8C%96%E5%AD%A6/"/>
    
    
      <category term="Chemistry  化学" scheme="https://www.mozheyang.top/tags/Chemistry-%E5%8C%96%E5%AD%A6/"/>
    
      <category term="Material  材料" scheme="https://www.mozheyang.top/tags/Material-%E6%9D%90%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>有意思的课题组跟踪</title>
    <link href="https://www.mozheyang.top/2019/02/13/groups/"/>
    <id>https://www.mozheyang.top/2019/02/13/groups/</id>
    <published>2019-02-13T03:11:52.000Z</published>
    <updated>2020-04-19T02:39:00.004Z</updated>
    
    <content type="html"><![CDATA[<p><strong>关键词：</strong>催化、3D打印（bits to atoms）、合成自动化（atoms to bits）、机器视觉、自然语言处理</p><a id="more"></a><style type="text/css">            table, th, td {                border: none;            }            .face {                width: 120px;                margin: 10px 0px 10px 10px;            }            .gname {                font-size: 1.5em;                font-weight: bold;                margin: 0px 0px 5px 20px;            }            .gwebsite {                font-size: 1em;                color: blue;                 margin: 0px 0px 5px 20px;            }            .gdes {                font-size: 0.8em;                color: gray;                margin: 5px 0px 5px 20px;            }</style><h1 id="自然科学-材料科学"><a href="#自然科学-材料科学" class="headerlink" title="自然科学 - 材料科学"></a>自然科学 - 材料科学</h1><table>    <tr>        <td><img src="http://www.chem.gla.ac.uk/cronin/media/mugshots/Lee.png" class="face"></td>        <td>            <p class="gname">Lee Cronin</p>            <a href="http://www.chem.gla.ac.uk/cronin/members/Lee/" target="blank" class="gwebsite">http://www.chem.gla.ac.uk/cronin/members/Lee/</a>            <p class="gdes">Multidisciplinary chemistry-based research teams</p>        </td>    </tr>    <tr>        <td><img src="http://colloids.matse.illinois.edu/images/group/jennifer_icon.jpg" class="face"></td>        <td>            <p class="gname">Jennifer A. Lewis</p>            <a href="http://colloids.matse.illinois.edu/publications.html" target="blank" class="gwebsite">http://colloids.matse.illinois.edu/publications.html</a>            <p class="gdes">3D打印</p>        </td>    </tr>    <tr>        <td><img src="http://matter.toronto.edu/wp-content/uploads/2018/08/aspuru-guzik-profile-small.jpg" class="face"></td>        <td>            <p class="gname">Alán Aspuru-Guzik</p>            <a href="http://matter.toronto.edu/" target="blank" class="gwebsite">http://matter.toronto.edu/</a>            <p class="gdes">Revolutionizing chemistry using computer science</p>        </td>    </tr>    <tr>        <td><img src="http://cba.mit.edu/media/logo.jpg" class="face"></td>        <td>            <p class="gname">The Center for Bits and Atoms</p>            <a href="http://cba.mit.edu/" target="blank" class="gwebsite">http://cba.mit.edu/</a>            <p class="gdes">Exploring the boundary between computer science and physical science</p>        </td>    </tr>    <tr>        <td><img src="https://static1.squarespace.com/static/58977341414fb5309fc954e6/t/5a68fd0508522944572c6cfe/1518219358915/?format=300w" class="face"></td>        <td>            <p class="gname">Self-assembly lab</p>            <a href="https://selfassemblylab.mit.edu/" target="blank " class="gwebsite">https://selfassemblylab.mit.edu/</a>            <p class="gdes">Programable materials</p>        </td>    </tr></table><h2 id="催化"><a href="#催化" class="headerlink" title="催化"></a>催化</h2><table>    <tr>        <td><img src="http://jaramillogroup.stanford.edu/images/people/Jaramillo.jpg" class="face"></td>        <td>            <p class="gname">T.F. Jaramillo</p>            <a href="http://jaramillogroup.stanford.edu/publications.html" target="blank" class="gwebsite">http://jaramillogroup.stanford.edu/publications.html</a>            <p class="gdes">光/电催化</p>        </td>    </tr>    <tr>        <td><img src="https://suncat.stanford.edu/sites/default/files/styles/people_image/public/norskov_0.jpg?itok=QX0Anz8u" class="face"></td>        <td>            <p class="gname">Jens K. Nørskov</p>            <a href="https://suncat.stanford.edu/pi/jens-k-n%C3%B8rskov" target="blank" class="gwebsite">https://suncat.stanford.edu/pi/jens-k-nørskov</a>            <p class="gdes">催化理论</p>        </td>    </tr>    <tr>        <td><img src="https://www.universiteitleiden.nl/binaries/content/gallery/ul2/portraits/science/k/marc_koper-330x390.jpg/marc_koper-330x390.jpg/d200x250" class="face"></td>        <td>            <p class="gname">Marc Koper</p>            <a href="https://www.universiteitleiden.nl/en/staffmembers/marc-koper" target="blank" class="gwebsite">https://www.universiteitleiden.nl/en/staffmembers/marc-koper</a>            <p class="gdes">催化理论</p>        </td>    </tr>    <tr>        <td><img src="http://en.baicsm.buct.edu.cn/images/content/2016-09/20160927200909937509.png" class="face"></td>        <td>            <p class="gname">Liming Dai</p>            <a href="https://case.edu/cse/eche/daigroup/liming-dai.html" target="blank" class="gwebsite">https://case.edu/cse/eche/daigroup/liming-dai.html</a>            <p class="gdes">碳基催化剂</p>        </td>    </tr>    <tr>        <td><img src="https://static.projects.iq.harvard.edu/files/styles/profile_full/public/rowland/files/haotian_wang_sm.jpg?m=1546481468&itok=IQjmXKMy" class="face"></td>        <td>            <p class="gname">Haotian Wang</p>            <a href="https://www2.rowland.harvard.edu/people/haotian-wang" target="blank" class="gwebsite">https://www2.rowland.harvard.edu/people/haotian-wang</a>            <p class="gdes">光/电催化，phD师从崔屹教授</p>        </td>    </tr>    <tr>        <td><img src="http://staff.ustc.edu.cn/~song2012/index.6.jpg" class="face"></td>        <td>            <p class="gname">Li Song</p>            <a href="http://staff.ustc.edu.cn/~song2012/" target="blank" class="gwebsite">http://staff.ustc.edu.cn/~song2012/</a>            <p class="gdes">同步辐射</p>        </td>    </tr>    <tr>        <td><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Professor_Magdalena_Titirici.jpg/640px-Professor_Magdalena_Titirici.jpg" class="face"></td>        <td>            <p class="gname">Magdalena (Magda) Titirici</p>            <a href="https://titiricigroup.org/" target="blank" class="gwebsite">https://titiricigroup.org/</a>            <p class="gdes">生物炭</p>        </td>    </tr>    <tr>        <td><img src="https://people.aalto.fi/files/1187775.jpg" class="face"></td>        <td>            <p class="gname">Orlando Rojas</p>            <a href="https://people.aalto.fi/orlando.rojas" target="blank" class="gwebsite">https://people.aalto.fi/orlando.rojas</a>            <p class="gdes">生物炭</p>        </td>    </tr>    <tr>        <td><img src="https://perssongroup.lbl.gov/img/kapersson.jpg" class="face"></td>        <td>            <p class="gname">Kristin A. Persson</p>            <a href="https://perssongroup.lbl.gov/publications.html" target="blank" class="gwebsite">https://perssongroup.lbl.gov/publications.html</a>            <p class="gdes">理论计算</p>        </td>    </tr>    <tr>        <td><img src="http://faculty.scs.illinois.edu/kenis/people/boss.jpg" class="face"></td>        <td>            <p class="gname">Paul Kennis</p>            <a href="http://faculty.scs.illinois.edu/kenis/publications.html" target="blank" class="gwebsite">http://faculty.scs.illinois.edu/kenis/publications.html</a>            <p class="gdes">Electrochemical Energy Storage & Conversion, esp. ECR</p>        </td>    </tr>    <tr>        <td><img src="https://chemistry.berkeley.edu/sites/default/files/styles/panopoly_image_original/public/yang-150x201.jpg?itok=Z9BGXTi8&timestamp=1414617107" class="face"></td>        <td>            <p class="gname">Peidong Yang</p>            <a href="http://nanowires.berkeley.edu/" target="blank" class="gwebsite">http://nanowires.berkeley.edu/</a>            <p class="gdes">纳米材料</p>        </td>    </tr>    <tr>        <td><img src="https://i1.rgstatic.net/ii/profile.image/273658778222623-1442256745963_Q512/Yoshio_Hori.jpg" class="face"></td>        <td>            <p class="gname">Yoshio Hori</p>            <a href="https://scinapse.io/authors/2032142430" target="blank" class="gwebsite">https://scinapse.io/authors/2032142430</a>            <p class="gdes">二氧化碳电还原</p>        </td>    </tr>    <tr>        <td><img src="http://kananlab.stanford.edu/images/matt.jpg" class="face"></td>        <td>            <p class="gname">Matt Kanan</p>            <a href="http://kananlab.stanford.edu/" target="blank" class="gwebsite">http://kananlab.stanford.edu/</a>            <p class="gdes">二氧化碳利用，CO2RR</p>        </td>    </tr>    <tr>        <td><img src="http://www.nanolab.fudan.edu.cn/images/students/zgf-small.jpg" class="face"></td>        <td>            <p class="gname">Gengfeng Zheng</p>            <a href="http://www.nanolab.fudan.edu.cn/publication.html" target="blank" class="gwebsite">http://www.nanolab.fudan.edu.cn/publication.html</a>            <p class="gdes">CO2RR & NRR</p>        </td>    </tr>    <tr>        <td><img src="http://web.mit.edu/eel/images/EELgroup/Yang-2013.gif" class="face"></td>        <td>            <p class="gname">Yang Shao-Horn</p>            <a href="http://web.mit.edu/eel/people.html" target="blank" class="gwebsite">http://web.mit.edu/eel/people.html</a>            <p class="gdes">Electrochemical Energy Conversion and Storage</p>        </td>    </tr></table><h1 id="计算机科学"><a href="#计算机科学" class="headerlink" title="计算机科学"></a>计算机科学</h1><table>    <tr>        <td><img src="https://web.stanford.edu/~jurafsky/danfall13.jpg" class="face"></td>        <td>            <p class="gname">Dan Jurafsky</p>            <a href="https://web.stanford.edu/~jurafsky/" target="blank" class="gwebsite">https://web.stanford.edu/~jurafsky/</a>            <p class="gdes">自然语言处理</p>        </td>    </tr>    <tr>        <td><img src="http://kaiminghe.com/img/me.jpg" class="face"></td>        <td>            <p class="gname">Kaiming He</p>            <a href="http://kaiminghe.com/" target="blank" class="gwebsite">http://kaiminghe.com/</a>            <p class="gdes">计算机视觉</p>        </td>    </tr></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;关键词：&lt;/strong&gt;催化、3D打印（bits to atoms）、合成自动化（atoms to bits）、机器视觉、自然语言处理&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Chemistry  化学" scheme="https://www.mozheyang.top/tags/Chemistry-%E5%8C%96%E5%AD%A6/"/>
    
      <category term="Updating  持续更新中..." scheme="https://www.mozheyang.top/tags/Updating-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/"/>
    
      <category term="Information Science &amp; Technology  信息科学与技术" scheme="https://www.mozheyang.top/tags/Information-Science-Technology-%E4%BF%A1%E6%81%AF%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>二零一捌，人生没有那么容易，也没有那么艰难</title>
    <link href="https://www.mozheyang.top/2019/02/13/2018thought/"/>
    <id>https://www.mozheyang.top/2019/02/13/2018thought/</id>
    <published>2019-02-13T03:11:36.000Z</published>
    <updated>2020-02-02T07:51:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="变化中的不变"><a href="#变化中的不变" class="headerlink" title="变化中的不变"></a>变化中的不变</h1><blockquote><p>The secret to that is to focus on the things that don’t change in your buisiness.<br>——Jeff Bezos</p></blockquote><p class="refs">来源：https://medium.com/</p><p>亚马逊CEO贝佐斯有句话说，<br>别人都在思考未来什么会变，<br>他思考什么不会变。</p><a id="more"></a><p>从这个角度出发，<br>你喜欢什么，<br>如何将喜好价值最大化，<br>并予人以满足，<br>那么你就填补了这个市场。</p><p>历史有其进程，<br>各人也有个人的发展，<br>最重要的能力应该是：思通、思辨、思退。</p><p>追浪逐潮，<br>总有潮退的那一天，<br>不如思考商业的本质，<br>并从自己的爱好出发，<br>挖掘自己以及所从事工作的潜力与价值。</p><h1 id="思想同质化"><a href="#思想同质化" class="headerlink" title="思想同质化"></a>思想同质化</h1><p>互联网和全球交通的发展，<br>增强了主流（掌握主动）一方的控制力。<br>在不损失既得利益的情况下，<br>进一步巩固了其地位。</p><p>以至于最高阶级以下思想趋于同质，<br>而两极（阶级经济实力）分化持续加剧。</p><p>保持<strong>多样性</strong>的存在是维持人类可持续发展的前提，<br>而思想同质化是扼杀多样性。<br>如果没有相应对抗平衡机制的话，<br>那么人类就在给自己的未来设置倒计时。</p><h1 id="政策学习"><a href="#政策学习" class="headerlink" title="政策学习"></a>政策学习</h1><p>学习另一个学科领域很有可能并不是要掌握其如何被使用，<br>也有可能是为了了解这个领域的人们如何思考问题。</p><p>世界发展潮流之上可能有更上层的结构，<br>那就是<strong>国与国之间的博弈</strong>。<br>这些博弈主要体现在各国的政策制定方面。<br><strong>公共政策学</strong>和<strong>政治经济学</strong>是值得了解的领域。</p><h1 id="尝试理解科研实质"><a href="#尝试理解科研实质" class="headerlink" title="尝试理解科研实质"></a>尝试理解科研实质</h1><p>科学研究无非是是<strong>找积木</strong>与<strong>搭积木</strong>两个过程：</p><p>在搭积木的过程中，<br>我们能直观体会到“积木”选择技巧的精巧，<br>这是一个从1到n的过程；</p><p>深入到找出新的积木，<br>我们才能真正创造全新的知识，<br>这是一个从0到1的过程。</p><h1 id="科研与探案"><a href="#科研与探案" class="headerlink" title="科研与探案"></a>科研与探案</h1><p>探案是在时间维度尝试对事物关系进行解释（其它维度的关系已经较为清楚）。<br>科研是从不同角度尝试解释事物关系，<br>或许不止空间和时间维度，<br>其维数可能远大于探案。</p><p>但探案的难度还可能存在于其可能是一个犯罪人与探案者之间的博弈过程，<br>而大自然永远不改变规则。</p><h1 id="什么是民科"><a href="#什么是民科" class="headerlink" title="什么是民科"></a>什么是民科</h1><p>民科是<strong>未曾仔细思考过已有理论</strong>，<br>而进行凭空臆测的伪科学。</p><p>这也侧面说明了，<br>为什么科研资料越多，<br>但科研的难度却日益增加<br>——因为很多其它的可能性都被排除了。</p><p>现在的理论要与之前的理论相容，<br>或者能够解释之前的现象，<br>这才是一个可能被正统科学所接受的理论。</p><h1 id="科学研究水平高低"><a href="#科学研究水平高低" class="headerlink" title="科学研究水平高低"></a>科学研究水平高低</h1><p>水平高低主要在思考深度积累上进行体现：<br>别人思考过的我们要思考（构建自洽系统），<br>别人没思考过的我们更要思考（创造新知识）。</p><p>总之，<br>具有<strong>快速知识吸收能力</strong>，<br>一定的<strong>记忆力</strong>，<br>和<strong>辩证的思考能力</strong>，<br>会是从事研究的必备条件。</p><h1 id="本科生与研究生学习方式的转变"><a href="#本科生与研究生学习方式的转变" class="headerlink" title="本科生与研究生学习方式的转变"></a>本科生与研究生学习方式的转变</h1><p>本科之前的学习属于单来源学习，<br>即，信息来源只有一个，我们只需要理解其内容，不需判断其可信度</p><p>而本科之后的研究生学习则完全不同。<br>信息来源一定不止一个，<br>我们需要在混乱的研究材料和逻辑中理出自己的思路。</p><h1 id="什么样的科学研究最有意义"><a href="#什么样的科学研究最有意义" class="headerlink" title="什么样的科学研究最有意义"></a>什么样的科学研究最有意义</h1><p>教科书和前人研究可以给我们提供基本的<strong>描述函数</strong>，<br>而我们真正重要的研究是寻找<strong>边界条件</strong>，<br>而不是对描述函数的一次次冗余验证。<br>我们也还可以综合多个描述函数以构造更复杂的函数，<br>但这些研究的意义总不会有寻找边界条件大。</p><h1 id="时机感"><a href="#时机感" class="headerlink" title="时机感"></a>时机感</h1><p>在各行各业获益所需要的最重要的能力是<strong>时机感</strong>，<br>也就是预测具体何时会发生某事的能力。<br>落后或者超前的预测都会使得获益受损。</p><h1 id="实验科学不讨喜"><a href="#实验科学不讨喜" class="headerlink" title="实验科学不讨喜"></a>实验科学不讨喜</h1><p>无论如何深入探求底层原理，<br>要考虑的问题也一样不少，<br>任何地方都可能发生问题。<br>这导致了实验科学的极大困难。<br>但对于喜欢挑战的人来说，<br>这可能正是快乐的源泉。</p><p>目前的实验科学还缺乏自动化、模块化的思想，<br>对新手来说，<br>解决重复性的问题是十分困难的，<br>已经重复多次的模块操作也并不能够复用。</p><p>机械操作的准确性，<br>而不是<br>实验设计的创新性，<br>是实验成功的决定因素。</p><p>这使得该类研究更像是一种<strong>体力劳动</strong>，<br>而非<strong>脑力劳动</strong>，<br>让人缺乏成就感，<br>较大地消耗了研究人员的热情。</p><h1 id="生物高通量不能硬搬到材料领域"><a href="#生物高通量不能硬搬到材料领域" class="headerlink" title="生物高通量不能硬搬到材料领域"></a>生物高通量不能硬搬到材料领域</h1><p>生物和信息科技行业<br>都自然存在大量待挖掘数据，<br>其瓶颈在于如何挖掘。</p><p>材料都是人工合成，<br>而并不自然存在的事物。<br>其瓶颈在于如果创造足够多的数据。</p><p>因此，<br>材料基因组成功的关键在于<br>如何<strong>批量制备</strong>材料和<strong>批量表征</strong>其结构和性能。</p><h1 id="人生是一个复杂优化问题"><a href="#人生是一个复杂优化问题" class="headerlink" title="人生是一个复杂优化问题"></a>人生是一个复杂优化问题</h1><p>有目标的问题都是优化问题。<br>有目标，大多数是褒义的。<br>但“功利”，却被认为是贬义的。</p><p>那是因为，功利指的是<br><strong>单目标、无约束</strong>问题。<br>这种思想企图将复杂的人生，<br>简化为<strong>最简单的优化模型</strong>。</p><h1 id="上课的意义"><a href="#上课的意义" class="headerlink" title="上课的意义"></a>上课的意义</h1><p>破除课程的界限，<br>甚至破除学科的界限，<br>将线性知识变成<strong>立体知识</strong>。</p><h1 id="证明自己走到领域前沿的方法（参考）"><a href="#证明自己走到领域前沿的方法（参考）" class="headerlink" title="证明自己走到领域前沿的方法（参考）"></a>证明自己走到领域前沿的方法（参考）</h1><p>想出该领域的一个问题，<br>并在权威平台 ，<br>最好是在权威人士的论调中对该问题进行检索，</p><p>——如果正好有人也认为这是一个问题，<br>说明我们对该领域理解到了一定深度，<br>能跟上发展前沿。</p><h1 id="太聪明不容易成功"><a href="#太聪明不容易成功" class="headerlink" title="太聪明不容易成功"></a>太聪明不容易成功</h1><p>抽象世界反馈很快，<br>现实（物理）世界反馈很慢。<br>“聪明人”会备受打击。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;变化中的不变&quot;&gt;&lt;a href=&quot;#变化中的不变&quot; class=&quot;headerlink&quot; title=&quot;变化中的不变&quot;&gt;&lt;/a&gt;变化中的不变&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;The secret to that is to focus on the things that don’t change in your buisiness.&lt;br&gt;——Jeff Bezos&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&quot;refs&quot;&gt;来源：https://medium.com/&lt;/p&gt;

&lt;p&gt;亚马逊CEO贝佐斯有句话说，&lt;br&gt;别人都在思考未来什么会变，&lt;br&gt;他思考什么不会变。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Thought  随想" scheme="https://www.mozheyang.top/tags/Thought-%E9%9A%8F%E6%83%B3/"/>
    
      <category term="Updating  持续更新中..." scheme="https://www.mozheyang.top/tags/Updating-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/"/>
    
  </entry>
  
  <entry>
    <title>文献数据库 | BibTeX文件读取的Python实现</title>
    <link href="https://www.mozheyang.top/2019/01/06/bibRead20190106/"/>
    <id>https://www.mozheyang.top/2019/01/06/bibRead20190106/</id>
    <published>2019-01-06T09:07:02.000Z</published>
    <updated>2020-02-02T07:53:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>基础知识准备的差不多了。</p><p>今天笔者准备正式开始为构建我们自己的个人搜索引擎而努力了。</p><a id="more"></a><p>目前想到笔者计算机里最有价值的结构数据可能是<strong>文献数据</strong>了。而文献数据可以方便地由文献管理软件导出，如EndNote、Mendeley和Zetoro等，都可以导出<strong>BibTeX文件</strong>。这种文件结构性强，拥有大部分可用于分析的<strong>数据或者数据链接</strong>，如作者（Author）、数字文献定位号（DOI）、题目（Title）和摘要（Abstract）等。</p><p>通过对文献数据管理软件中的文献数据进行解读分析，或许我们就可以掌握主要的主题信息了，甚至还可以进一步掌握他们之间的关联…一切皆有可能，那就先从解析BibTeX文件开始吧。全文实现依赖于GitHub的python-bibtexparser库，其地址如下：<a href="https://github.com/sciunto-org/python-bibtexparser" target="_blank" rel="noopener">https://github.com/sciunto-org/python-bibtexparser</a>. </p><h1 id="基本操作…"><a href="#基本操作…" class="headerlink" title="基本操作…"></a>基本操作…</h1><p>以下是笔者从Zotero导出的一份未经处理的原生态article的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@article&#123;lee_understanding_2018,</span><br><span class="line">title &#x3D; &#123;Understanding the &#123;Role&#125; of &#123;Functional&#125; &#123;Groups&#125; in &#123;Polymeric&#125; &#123;Binder&#125; for &#123;Electrochemical&#125; &#123;Carbon&#125; &#123;Dioxide&#125; &#123;Reduction&#125; on &#123;Gold&#125; &#123;Nanoparticles&#125;&#125;,</span><br><span class="line">volume &#x3D; &#123;28&#125;,</span><br><span class="line">copyright &#x3D; &#123;&#123;\textcopyright&#125; 2018 WILEY-VCH Verlag GmbH \&amp; Co. KGaA, Weinheim&#125;,</span><br><span class="line">issn &#x3D; &#123;1616-3028&#125;,</span><br><span class="line">url &#x3D; &#123;https:&#x2F;&#x2F;onlinelibrary.wiley.com&#x2F;doi&#x2F;abs&#x2F;10.1002&#x2F;adfm.201804762&#125;,</span><br><span class="line">doi &#x3D; &#123;10.1002&#x2F;adfm.201804762&#125;,</span><br><span class="line">abstract &#x3D; &#123;Electrochemical CO2 reduction reaction (CO2RR) is one of the promising strategies for converting CO2 to value-added chemicals. Gold (Au) catalysts are considered to be the best benchmarking materials for CO2RR to produce CO. In this work, the role of different functional groups of polymeric binders on CO2RR over Au catalysts is systematically investigated by combined experimental measurements and density functional theory (DFT) calculations. Especially, it is revealed that the functional groups can play a role in suppressing the undesired hydrogen evolution reaction, the main competing reaction against CO2RR, thus enabling more catalytic active sites to be available for CO2RR and enhancing the CO2RR activity. Consistent with the DFT prediction, fluorine (F)-containing functional groups in the F-rich polytetrafluoroethylene binder lead to a high Faradaic efficiency (?94.7\%) of CO production. This study suggests a new strategy by optimizing polymeric binders for the selective CO2RR.&#125;,</span><br><span class="line">language &#x3D; &#123;en&#125;,</span><br><span class="line">number &#x3D; &#123;45&#125;,</span><br><span class="line">urldate &#x3D; &#123;2018-11-11&#125;,</span><br><span class="line">journal &#x3D; &#123;Advanced Functional Materials&#125;,</span><br><span class="line">author &#x3D; &#123;Lee, Ji Hoon and Kattel, Shyam and Xie, Zhenhua and Tackett, Brian M. and Wang, Jiajun and Liu, Chang-Jun and Chen, Jingguang G.&#125;,</span><br><span class="line">month &#x3D; nov,</span><br><span class="line">year &#x3D; &#123;2018&#125;,</span><br><span class="line">keywords &#x3D; &#123;binders, density functional theories, electrochemical carbon dioxide reduction, functional groups, gold&#125;,</span><br><span class="line">pages &#x3D; &#123;1804762&#125;,</span><br><span class="line">file &#x3D; &#123;Full Text PDF:E\:\\zotero\\storage\\QC4NU7WY\\Lee ?? - 2018 - Understanding the Role of Functional Groups in Pol.pdf:application&#x2F;pdf&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尽管结构十分清晰，可以大概看出是一个二维字典的结构，但是其中不乏非UTF-8编码的奇怪字符。</p><p>这是不能避免的。</p><p>英文中的常用字符都包括在UTF-8编码中，但由于文献中存在各国作者，姓名中就带有各国特色；再加之其他不可预测的不同编码方式，因此，读取此类BibTeX还是要使用UTF编码更为稳妥。UTF-8编码是UTF编码的简化，是一套以8位为一个编码单位的<strong>可变长</strong>编码，能包含的奇怪字符自然就少了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding = utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> bibtexparser <span class="keyword">as</span> bp</span><br><span class="line"><span class="keyword">from</span> bibtexparser.bparser <span class="keyword">import</span> BibTexParser</span><br><span class="line"><span class="keyword">from</span> bibtexparser.customization <span class="keyword">import</span> convert_to_unicode</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'exampleBib.bib'</span>) <span class="keyword">as</span> bibfile:</span><br><span class="line">    parser = BibTexParser()  <span class="comment"># 声明解析器类</span></span><br><span class="line">    parser.customization = convert_to_unicode  <span class="comment"># 将BibTeX编码强制转换为UTF编码</span></span><br><span class="line">    bibdata = bp.load(bibfile, parser = parser)  <span class="comment"># 通过bp.load()加载</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出作者和DOI</span></span><br><span class="line">print(bibdata.entries[<span class="number">0</span>][<span class="string">'author'</span>])</span><br><span class="line">print(bibdata.entries[<span class="number">0</span>][<span class="string">'doi'</span>])</span><br></pre></td></tr></table></figure><p>可以看出要实现这样基本能用的效果要导入至少三个函数库：</p><ul><li>bibtexparser.load(bibfile, parser)</li><li>BibTexParser()</li><li>convert_to_unicode(record)</li></ul><h2 id="出错分析"><a href="#出错分析" class="headerlink" title="出错分析"></a>出错分析</h2><p>正当笔者激动地搓着手手…</p><p>这时候出错了…</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"readBibFile.py"</span>, line 50, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    bibdata = bp.load(bibfile, parser = parser)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/bibtexparser/__init__.py"</span>, line 71, <span class="keyword">in</span> load</span><br><span class="line">    <span class="built_in">return</span> parser.parse_file(bibtex_file)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/bibtexparser/bparser.py"</span>, line 165, <span class="keyword">in</span> parse_file</span><br><span class="line">    <span class="built_in">return</span> self.parse(file.read(), partial=partial)</span><br><span class="line">...</span><br><span class="line">bibtexparser.bibdatabase.UndefinedString: u<span class="string">'nov'</span></span><br></pre></td></tr></table></figure><p>看到最后一行，笔者知道月份（“month”）字段出了问题。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">month</span> = nov,</span><br></pre></td></tr></table></figure><p>也是很奇怪了。明明其它数据都好好的，就“month”字段怎么没有“{}”呢？</p><p>如果“month”字段没有“{}”那么“nov”就无法识别。当然如果“month”字段是数字的话，好像又能够顺利运行了。这一点要批评Zotero了，笔者后来再去试试别的文献管理软件，看看是不是存在同样的问题。</p><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p>好了，手动修改调整“month”字段后至少就能顺利运行了，python-bibtexparser超好用的！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Lee, Ji Hoon and Kattel, Shyam and Xie, Zhenhua and Tackett, Brian M. and Wang, Jiajun and Liu, Chang-Jun and Chen, Jingguang G.</span><br><span class="line">10.1002/adfm.201804762</span><br></pre></td></tr></table></figure><h1 id="进阶美化"><a href="#进阶美化" class="headerlink" title="进阶美化"></a>进阶美化</h1><p>python-bibtexparser的作者（们）充分考虑到了大家爱美的需求，提供了一些自定义的美化方式，比如姓名上的“姓”“名”区分，就使用一个customization库文件考虑到了。要做到这一点，需要导入customization库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding = utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> bibtexparser <span class="keyword">as</span> bp</span><br><span class="line"><span class="keyword">from</span> bibtexparser.bparser <span class="keyword">import</span> BibTexParser</span><br><span class="line"><span class="keyword">from</span> bibtexparser.customization <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">customizations</span><span class="params">(record)</span>:</span></span><br><span class="line">    <span class="string">"""Use some functions delivered by the library</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param record: a record</span></span><br><span class="line"><span class="string">    :returns: -- customized record</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    record = type(record)</span><br><span class="line">    record = author(record)</span><br><span class="line">    record = editor(record)</span><br><span class="line">    record = journal(record)</span><br><span class="line">    record = keyword(record)</span><br><span class="line">    record = link(record)</span><br><span class="line">    record = page_double_hyphen(record)</span><br><span class="line">    record = doi(record)</span><br><span class="line">    <span class="comment"># record = month(record)</span></span><br><span class="line">    <span class="keyword">return</span> record</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'exampleBib.bib'</span>) <span class="keyword">as</span> bibfile:</span><br><span class="line">    parser = BibTexParser() </span><br><span class="line">    parser.customization = customizations  <span class="comment"># 这里跟上面不同，用了自定义的customizations函数</span></span><br><span class="line">    bibdata = bp.load(bibfile, parser = parser)</span><br><span class="line"></span><br><span class="line">print(bibdata.entries[<span class="number">0</span>][<span class="string">'author'</span>])</span><br><span class="line">print(bibdata.entries[<span class="number">0</span>][<span class="string">'doi'</span>])</span><br></pre></td></tr></table></figure><p>而customizations函数实际写在另一个库文件中…</p><p>其中就有author字段的处理函数。我们也可以自定义自己的字段处理函数。不知道“month”字段能不能通过这种方法解决兼容问题呢？先截取一小段吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">author</span><span class="params">(record)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Split author field into a list of "Name, Surname".</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param record: the record.</span></span><br><span class="line"><span class="string">    :type record: dict</span></span><br><span class="line"><span class="string">    :returns: dict -- the modified record.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"author"</span> <span class="keyword">in</span> record:</span><br><span class="line">        <span class="keyword">if</span> record[<span class="string">"author"</span>]:</span><br><span class="line">            record[<span class="string">"author"</span>] = getnames([i.strip() <span class="keyword">for</span> i <span class="keyword">in</span> record[<span class="string">"author"</span>].replace(<span class="string">'\n'</span>, <span class="string">' '</span>).split(<span class="string">" and "</span>)])  <span class="comment"># getname又是一个复杂函数，处理姓名分段</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">del</span> record[<span class="string">"author"</span>]</span><br><span class="line">    <span class="keyword">return</span> record</span><br></pre></td></tr></table></figure><p>最后输出结果，在作者处不一样啦：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[u<span class="string">'Lee, Ji Hoon'</span>, u<span class="string">'Kattel, Shyam'</span>, u<span class="string">'Xie, Zhenhua'</span>, u<span class="string">'Tackett, Brian M.'</span>, u<span class="string">'Wang, Jiajun'</span>, u<span class="string">'Liu, Chang-Jun'</span>, u<span class="string">'Chen, Jingguang G.'</span>]</span><br><span class="line">10.1002/adfm.201804762</span><br></pre></td></tr></table></figure><p>而原来的输出结果名字是不分开的（以下为默认输出结果，非自定义）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Lee, Ji Hoon and Kattel, Shyam and Xie, Zhenhua and Tackett, Brian M. and Wang, Jiajun and Liu, Chang-Jun and Chen, Jingguang G.</span><br><span class="line">10.1002/adfm.201804762</span><br></pre></td></tr></table></figure><p>好了，今天先到这吧，</p><p>前天的急性肠胃炎还没好，今天还失眠到早5点，又冷又饿还困…</p><p>嗝…</p><p>鄙人水平有限，乐于班门弄斧，欢迎来信指教。</p><p>Email: mozheyang@outlook.com</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基础知识准备的差不多了。&lt;/p&gt;
&lt;p&gt;今天笔者准备正式开始为构建我们自己的个人搜索引擎而努力了。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Information Science &amp; Technology  信息科学与技术" scheme="https://www.mozheyang.top/tags/Information-Science-Technology-%E4%BF%A1%E6%81%AF%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Literature  文献" scheme="https://www.mozheyang.top/tags/Literature-%E6%96%87%E7%8C%AE/"/>
    
      <category term="Python" scheme="https://www.mozheyang.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode | Valid Parentheses (easy level)</title>
    <link href="https://www.mozheyang.top/2019/01/06/leetcode20/"/>
    <id>https://www.mozheyang.top/2019/01/06/leetcode20/</id>
    <published>2019-01-06T02:47:05.000Z</published>
    <updated>2020-02-02T08:12:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Problem-20-Valid-Parentheses"><a href="#Problem-20-Valid-Parentheses" class="headerlink" title="Problem 20: Valid Parentheses"></a>Problem 20: Valid Parentheses</h1><p>Given a string containing just the characters <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code>, <code>&#39;{&#39;</code>, <code>&#39;}&#39;</code>, <code>&#39;[&#39;</code> and <code>&#39;]&#39;</code>, determine if the input string is valid.</p><p>An input string is valid if:</p><ol><li>Open brackets must be closed by the same type of brackets.</li><li>Open brackets must be closed in the correct order.</li></ol><p>Note that an empty string is also considered valid.</p><a id="more"></a><p><strong>Example 1:</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Input:</span> <span class="string">"()"</span></span><br><span class="line"><span class="string">Output:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Input:</span> <span class="string">"()[]&#123;&#125;"</span></span><br><span class="line"><span class="string">Output:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>Example 3:</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Input:</span> <span class="string">"(]"</span></span><br><span class="line"><span class="string">Output:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><strong>Example 4:</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Input:</span> <span class="string">"([)]"</span></span><br><span class="line"><span class="string">Output:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><strong>Example 5:</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Input:</span> <span class="string">"&#123;[]&#125;"</span></span><br><span class="line"><span class="string">Output:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="Good-solution-for-efficiency"><a href="#Good-solution-for-efficiency" class="headerlink" title="Good solution for efficiency"></a>Good solution for efficiency</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isValid</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        stack = []</span><br><span class="line">        left = [<span class="string">'('</span>,<span class="string">'&#123;'</span>,<span class="string">'['</span>]</span><br><span class="line">        right = [<span class="string">')'</span>,<span class="string">'&#125;'</span>,<span class="string">']'</span>]</span><br><span class="line">        mapping = dict(zip(right,left))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i] <span class="keyword">in</span> mapping:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> stack <span class="keyword">or</span> mapping[s[i]] != stack.pop():</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stack.append(s[i])</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> stack</span><br></pre></td></tr></table></figure><p><code>left</code> and <code>right</code> are lists. <code>mapping</code> is a dictionary, which combines <code>right</code> and <code>left</code> using <code>dict</code> and <code>zip</code> function. Searching/matching in dictionary would be more efficient than in list. </p><p>Pythonic way to express checking:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> s[i] <span class="keyword">in</span> mapping:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> stack <span class="keyword">or</span> mapping[s[i]] != stack.pop():</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">stack.append(s[i])</span><br></pre></td></tr></table></figure><p>If s[i] is not ‘)’,’}’,’]’, then stack.append(s[i]); if s[i] is ‘)’,’}’,’]’, then compare it with stack.pop() — the top element in stack. Concise code speeds the execution… </p><h1 id="My-ugly-solution"><a href="#My-ugly-solution" class="headerlink" title="My ugly solution"></a>My ugly solution</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isValid</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        </span><br><span class="line">        dict1 = &#123;<span class="string">'('</span>:<span class="number">1</span>, <span class="string">'&#123;'</span>:<span class="number">2</span>, <span class="string">'['</span>:<span class="number">3</span>&#125;</span><br><span class="line">        dict2 = &#123;<span class="string">')'</span>:<span class="string">'('</span>, <span class="string">'&#125;'</span>:<span class="string">'&#123;'</span>, <span class="string">']'</span>:<span class="string">'['</span>&#125;</span><br><span class="line">        stack = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(len(s)):</span><br><span class="line">            char = s[n]</span><br><span class="line">            <span class="keyword">if</span> char <span class="keyword">in</span> dict1:</span><br><span class="line">                stack.append(char)</span><br><span class="line">            <span class="keyword">elif</span> char <span class="keyword">in</span> dict2:</span><br><span class="line">                <span class="keyword">if</span> stack == []:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                <span class="keyword">if</span> dict2[char] == stack[<span class="number">-1</span>]:</span><br><span class="line">                    stack.pop()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> stack == []</span><br></pre></td></tr></table></figure><p>Too many “if” checks slow the solution. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> stack == []:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>This check above for test case without left brackets:</p><p>“]”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> dict2[char] == stack[<span class="number">-1</span>]:</span><br><span class="line">stack.pop()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>This check above for test case in disorder:</p><p>“(])”</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Problem-20-Valid-Parentheses&quot;&gt;&lt;a href=&quot;#Problem-20-Valid-Parentheses&quot; class=&quot;headerlink&quot; title=&quot;Problem 20: Valid Parentheses&quot;&gt;&lt;/a&gt;Problem 20: Valid Parentheses&lt;/h1&gt;&lt;p&gt;Given a string containing just the characters &lt;code&gt;&amp;#39;(&amp;#39;&lt;/code&gt;, &lt;code&gt;&amp;#39;)&amp;#39;&lt;/code&gt;, &lt;code&gt;&amp;#39;{&amp;#39;&lt;/code&gt;, &lt;code&gt;&amp;#39;}&amp;#39;&lt;/code&gt;, &lt;code&gt;&amp;#39;[&amp;#39;&lt;/code&gt; and &lt;code&gt;&amp;#39;]&amp;#39;&lt;/code&gt;, determine if the input string is valid.&lt;/p&gt;
&lt;p&gt;An input string is valid if:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open brackets must be closed by the same type of brackets.&lt;/li&gt;
&lt;li&gt;Open brackets must be closed in the correct order.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note that an empty string is also considered valid.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Information Science &amp; Technology  信息科学与技术" scheme="https://www.mozheyang.top/tags/Information-Science-Technology-%E4%BF%A1%E6%81%AF%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>信息社会求生指南 | 怎么在纷繁中找到自己的目标</title>
    <link href="https://www.mozheyang.top/2018/12/16/ValueYouself/"/>
    <id>https://www.mozheyang.top/2018/12/16/ValueYouself/</id>
    <published>2018-12-16T11:07:24.000Z</published>
    <updated>2020-02-02T08:25:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>如今社会纷繁而复杂，各色消息充斥眼球。虽有人向往纸醉金迷，却也有人向往平淡闲适。</p><p>不知道各位有没有思考过这样一个问题：<strong>我们从哪来？到哪去？这一切的意义到底是什么？</strong></p><a id="more"></a><p>可能大家看到这就要笑了。这不是经典哲学问题吗？网络上、电视上的梗都多了去了，还需要你个小子来提醒我们？</p><blockquote><p>我相信，一个人在他年轻的时候，是会无数次地叩问自己——我的一生，到底要追索怎样的意义？我想了无数个晚上和白天，终于得到一个答案。今天，在这里，我将非常负责地对大家说，我思索的结果是——<strong>人生没有任何意义</strong>！</p><p>——毕淑敏</p></blockquote><p>那还真不一定。或许大家还是要不时地接受笔者的提醒。因为，如果我们已经明白了这个问题的答案，那我们就知道自己追求的是什么了。若是我们十分清楚自己追求的是什么，便<strong>不会再被人世的纷繁所扰动</strong>。”任世事风起云涌，我自岿然不动。“这是笔者所追求的状态，却也是在当前社会环境下十分难以达到的一个状态。</p><p>互联网给了我们太多。既有便利，也有烦忧。那“便利”，是让我们普罗大众也能看得很高很远，每个人都能实时掌握世界大事，感觉世界之事不过尔尔；那“烦忧”，是信息过载，超出了我们一般人所能接收的信息量，光是浏览每天接受到的信息便应接不暇，更别提理解与归纳了。那么在这样的信息社会中，<strong>我们怎样明确愿意奋斗终生的目标？</strong>笔者自己有一套原则，可供大家参考。</p><h1 id="社会认同（短期目标）"><a href="#社会认同（短期目标）" class="headerlink" title="社会认同（短期目标）"></a>社会认同（短期目标）</h1><p>纸醉金迷、灯红酒绿的生活令人向往，这并不无道理。一方面，<strong>对物质生活的追求是人类欲望的体现</strong>。而人类欲望是有其生物进化依据的。在原始社会，占据领导地位的人类能够得到占据更多的食物，也就相当于保证了其生存的权利。“酒足饭饱思淫欲”，别看它低俗，却也反映了人类欲望需求层次的提高——在生存的基础上，还需要保证繁衍后代的权利。再后来，人类在自然界中已然坐上了头把交椅，开始有人类贵族钻研起“未知领域”。这可以解释为人类求知欲的体现。以上推演过程实际都是在马斯洛需求层次理论框架内的。</p><p><img src="https://tse3.mm.bing.net/th?id=OIP.l569V6QPZT6en5cRMuedDwHaFk&amp;pid=Api" alt=""></p><p>另一方面，<strong>物质回报的满足是社会认同的侧面体现</strong>。若是担得起企业所给的估价，我们为其创造的价值一定比估价更高。因此，获得报酬的高低是现代年轻人衡量自己对社会贡献的一种重要方式。这也就是为什么受过高等教育，从小衣食无忧的年轻人也会尽量寻求一份高薪酬和体面的工作——不仅是为了满足生理欲望，更是为了证明自己存在的价值。从这个角度来说，<u>在不损害健康和个人原则的基础上，追求高回报的目标是没有问题的。</u></p><p>但是，市场的价值取向不是完美的，甚至是畸形的。通过薪酬来衡量个人对社会的贡献度很明显是不合理的。长期盯着外界激励，那我们只能不断被一个个短期目标所吸引，最后丧失自我。若是能够脱离金钱的评价体系，我们就会进入下一个阶段——自我认同。</p><h1 id="自我认同（长期目标）"><a href="#自我认同（长期目标）" class="headerlink" title="自我认同（长期目标）"></a>自我认同（长期目标）</h1><p>在马斯洛需求层次理论中，最高层次的需求是自我需求（self actualization）。<strong>自我需求可以通过外界反馈来满足（如社会认同），而更好的方法应该是通过自己对自己的认同，即通过自我认同来满足。</strong>一个不求外界认同，而能够实现自我认同的人，才是一个心智健全且内心强大的人。在漫长的人生道路中，这样的人能够坚持自己的方向，不盲目从众或随波逐流，最后成就一番事业。</p><p>“自我认同”不是盲目的自负。它是谦卑而又自信地审视自身优缺点后才可能达到的心理境界。</p><p>我们要相信自己正在做的努力是有价值的，那才可能实现自我认同。因此要实现自我认同，就要确保自己走在“正确”的道路上。那么<strong>首先就得确定一条我们认为方向正确的道路，即长期目标</strong>。我还在学生会工作时，一个很优秀的学生会主席对我们说，她认为人生中的目标（中短期目标）都是会被不断修正的，但是一定要有目标（长期目标）。</p><p>原则上，长期目标因尽可能少地进行修正，却也不代表其不能被修正。但每次目标修正都应该遵照自身原则。我们需要独立地做出判断，敢于承担判断失误的风险。每次长期目标的修正都可能是我们三观的一次颠覆。这种颠覆的结果是难以预料的，没有人能替我们做出正确的决定。</p><p>话说回来，长期目标的确定是极其必要的。笔者的个人经验是，多尝试，多体验，多听人言，最后自己判断。</p><h1 id="拒绝纸上谈兵"><a href="#拒绝纸上谈兵" class="headerlink" title="拒绝纸上谈兵"></a>拒绝纸上谈兵</h1><p>以下是一些实用方法，可供参考：</p><ul><li>通过各种媒体渠道了解国家和社会需求</li><li>通过客观数据（如经济指数、财务报表、社会新闻等）分析市场供需关系</li><li>尝试预测未来市场供需关系，分析自己的优劣势所在</li><li>结合过去生活经历，分析自己擅长什么工作</li><li>可能条件下，多尝试不同的感兴趣的工作</li><li>多结交理想工作的朋友，多与他们交流</li><li>结合当前知识积累，结合当前所看到的形势，为未来的职业道路规划路线</li><li>…</li><li>最后，<strong>一定要保证有自己的思考！！！</strong></li></ul><p>完</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如今社会纷繁而复杂，各色消息充斥眼球。虽有人向往纸醉金迷，却也有人向往平淡闲适。&lt;/p&gt;
&lt;p&gt;不知道各位有没有思考过这样一个问题：&lt;strong&gt;我们从哪来？到哪去？这一切的意义到底是什么？&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Thought  随想" scheme="https://www.mozheyang.top/tags/Thought-%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>自然科学视角 | 如何进入一个新的领域（研究入坑指南）</title>
    <link href="https://www.mozheyang.top/2018/12/16/HowToResearch/"/>
    <id>https://www.mozheyang.top/2018/12/16/HowToResearch/</id>
    <published>2018-12-16T11:07:13.000Z</published>
    <updated>2020-04-19T02:25:26.002Z</updated>
    
    <content type="html"><![CDATA[<p>笔者理工科在读研究生，从高中开始嗜读科普读物，开始参加化学竞赛，与自然科学结下不解之缘。本科专业方向金属加工相关，也由于项目原因接触过能源材料相关课题（锂电、电催化），同时多次参加创新创业项目及数学建模竞赛，结识了不少不同专业的同学。因此笔者斗胆认为，相对于同龄人，本人还是具有较强的跨学科意识的，习惯于进入新的（研究）领域。</p><a id="more"></a><p>笔者研究生方向为“电催化”，与本科方向“金属材料加工”大相径庭。那么在笔者这个“具有跨学科意识”的研究生眼中，以怎样一个姿态进入一个新的研究领域最轻松呢？</p><p>在<strong>自然科学领域</strong>，<strong>从一个方向的最基本原理出发</strong>可能是最省力的，而且这种方法给我们提供了广阔的发展空间。这其实与Elon Musk（电动汽车企业Tesla和航天企业Space X创始人）所提出的“第一性原理”不谋而合——用物理学的角度看待世界，一层层拨开事物表象，看到里面的本质，再从本质一层层往上走。</p><p><img src="https://www.mozheyang.top/images/HowToResearch/ElonMusk.jpg" alt=""></p><p>自然科学的基础是<strong>物理</strong>。而物理大厦的基石是<strong>数学</strong>。很遗憾，笔者高中学的最差的也正是这两科，但这却并没有影响笔者对数学和物理思想的欣赏与求索。笔者很庆幸能够在多次数学建模竞赛中磨炼出<strong>快速抽象数学模型</strong>的能力。这让笔者从此擦亮了眼睛一般，分析问题总习惯于较旁人更为深入。</p><p>在介绍了这个最基本原理之后，笔者将把自己从大四开始进行新领域探索的心路历程和具体实践写出来与大家分享。希望能给大家带来一些小小的启发。见笑。</p><h1 id="第一步：形成感性认识"><a href="#第一步：形成感性认识" class="headerlink" title="第一步：形成感性认识"></a>第一步：形成感性认识</h1><p>大四保研的生活是那么悠闲。悠闲到有一些无聊。无聊到让我有时间想想要不要做一些未来研究方向的了解。</p><p>既然我已经对原来方向没了兴趣，那么可以做一些新研究方向的探索吗？比如从现在就看一些催化方向的<strong>最新研究论文</strong>？当时我的研究方向还没有定，只知道应该是催化，至于是传统催化、光催化还是电催化，那就不得而知了。</p><p>大三的我本来准备出国，把<strong>托福和GRE都考了一遍</strong>，但成绩都不很理想。最后放弃了出国的计划，在国内读研。近六个月的高强度英语学习没有浪费，我的单词量、阅读能力和口语能力都在那段时间得到了显著的提高，这也成为我后来阅读英文论文及其它英文资料打好了基础。</p><p>一开始我就是读的<strong>英文论文</strong>，以<strong>综述</strong>类文章为主，研究类文章为辅（没有也不行）。但在在一些基本概念的理解上，需要辅以<strong>中文学术专著</strong>和<strong>中文硕博士论文</strong>。刚开始看论文肯定是要栽的。毕竟真的是在几乎不相干的两个领域（结构材料与功能材料）跨越。论文中频繁出现的专有名词和各类表征手段，让我直接找不着北，甚至让我产生了这辈子都学不会的绝望……但是这种感觉在数学建模初期已经体验得足够多了，所以我也没有害怕，硬着头皮继续读了下去。</p><p>读着读着，大量论文中出现了一些“统计”规律：</p><ul><li>如果所找的文章没有问题，<strong>同属于一个很小的主题</strong>（比如光催化中的二氧化碳还原、电催化中的氧还原等），那么介绍部分（introduction）对方向发展历史沿革的介绍，会十分相似。由此看出，<strong>在方向入门初期，精确检索出一定数量的文献是极其重要的。</strong></li><li>高分（高影响因子）的文章各有各的不同，<strong><del>低分的文章却总是相似的</del>水刊的文章却总是相似的</strong>（水刊并不一定是低分期刊，大部分是发文的“中流砥柱”）。这种相似不仅体现在介绍部分，还主要体现在<strong>研究思路</strong>和<strong>主要研究方法</strong>（如表征手段、测试手段）上。一种研究思路刚开始看没看懂没关系，多看几篇类似的文章就能明白了。从这个角度来说，科研入门初期不宜阅读过多高分文章。可以考虑精读一两篇经典文献，提高自己的科学鉴赏力。而后可以<strong>通过大量阅读同质的<del>低分</del>水刊文章</strong>，形成对这个方向的感性认识。</li></ul><p>通过之前的几步操作，我已经对一个方向的最基本原理、研究思路和研究方法有了一定感性认识。这一阶段不必要从专业书啃起。我之前就走了不少弯路，不少时间浪费在了不能理解的，而且也不太重要的学术专著上。研究生的学习不比本科学习——研究生阶段是先有了需求再去学习，有别于本科阶段无差别地进行系统学习。</p><p>我后来的方向在研一上半学期进行一半之后被确认为“电催化”，我把以上的那一套学习方法又复制了一遍，也不是很费劲。同时对光催化的了解也对我理解电催化有一定帮助。当然这是后话了。</p><blockquote><p>总结一下，形成研究方向的感性认识可以直接从<strong>最新研究论文</strong>着手，对热门领域更是如此（论文数量庞大）。首要推荐的论文资料是<strong>最新英文综述（reviews）</strong>，同时可以辅以中文专著和硕博士论文，少量研究论文（research articles）。阅读论文有两点需要注意：</p><ul><li>精确检索同一主题论文（可以向老师和师兄师姐寻求帮助，也可以自己锻炼）</li><li>关注同质化的<del>低分</del>水刊文章，了解主流的研究思想和研究方法</li></ul></blockquote><h1 id="第二阶段：上升理性认识"><a href="#第二阶段：上升理性认识" class="headerlink" title="第二阶段：上升理性认识"></a>第二阶段：上升理性认识</h1><p>研一的我，开始了系统的课程学习。这一阶段为我后来的文献阅读产生了极大的帮助。</p><p>我们不能总停留于对论文结论的粗浅认识，终究需要明白论文背后的科学意义——即论文内容到底解决了一个什么<strong>科学问题</strong>。什么是“科学问题”？对这个概念，没有一个类似数学定义中那样精确的定义。我的理解是，<strong>一个科学问题，至少应该在方向发展历程主线/支线上的一个抽象的、没有被解决过的问题</strong>。一个没有被解决过的问题是不会存在于现有结论中的，但是可能可以通过对现有结论进行演绎而得到，或者可以通过对大量现有结论/实验事实进行归纳得到。但那些工作都是极为复杂的工作，可以被称之为有意义的科学工作。这样的工作是值得被发表的。</p><p><img src="https://www.mozheyang.top/images/HowToResearch/SciTree.png" alt=""></p><p>要明白论文背后的科学意义，而不是浮于表面只知道它所采用的具体方法，这是我们将所需研究领域上升理性认识所需要走的第一步。因为只有上升到理性认识，我们才能<strong>站在更高的维度去审视一个问题</strong>，避免“只见树木不见森林”。在这一阶段，我主要通过硬啃<strong>研究生课程</strong>和<strong>对应学科基础专著</strong>来实现。显然，这是十分耗时耗力的。大多数不需要做研究的同学，如果只是要了解一个新的领域，没有必要使用这样的方法。而且即使是做研究，也可以不求甚解。毕竟即使同是科学研究，也有“阳春白雪”和“下里巴人”的嘛。</p><blockquote><p>为了站在更高维度去审视问题，我们需要：</p><ul><li>研究生课程学习（或者相应网络课程的系统学习）</li><li>对应学科基础专著（略高于本科水平的研究生课程专著）</li></ul></blockquote><h1 id="第三阶段：欲知此事必躬行"><a href="#第三阶段：欲知此事必躬行" class="headerlink" title="第三阶段：欲知此事必躬行"></a>第三阶段：欲知此事必躬行</h1><p>研一下学期，下了实验室，我才发现并不是所有的结论都被写在了纸上。一方面，论文作者会出于不愿意让竞争者快速重复出来实验的原因，往往都会在论文中对实验细节有所隐瞒；另一方面，部分实验细节（如离心速度、工作电极的具体处理方法等）本身是需要依赖经验和直觉的，不一定具有普适性，那么这就不是“科学”，因此没有资格出现在科学论文中。</p><p>这样的情况就对科研新手不是很友好了。科研新手（比如我），常常会迷失于可以使用的各种实验参数中，对什么是关键的，什么不是关键的控制因素没有清晰的认识。这就会导致科研新手的实验往往难以重现。<strong>一个科学现象如果不能被重现，那我们就不能算是真正“发现”了它。</strong></p><p>为了能够真正在现实中观察到科学现象，我们必须要试错。试错的过程是极为痛苦的，至少对我来说是如此。从仪器的使用到实验参数的控制，到最后的结果分析，我都走了很多很多弯路。当然，我们可以安慰自己，在科研过程中，<strong>该走的弯路一点都不会少</strong>。现在少走的弯路，还会在前面等着我们。我们把面前的路走直了，那曙光也就在眼前了。</p><blockquote><p>纸上得来终觉浅，绝知此事要躬行。</p><p>亲自实践是必不可少的。该走的弯路一点都不会少走。</p></blockquote><h1 id="第四阶段：质疑、猜想与验证"><a href="#第四阶段：质疑、猜想与验证" class="headerlink" title="第四阶段：质疑、猜想与验证"></a>第四阶段：质疑、猜想与验证</h1><p>要解决新的科学问题，就要在已解决的问题中发现问题。鉴于大多数论文都会对论文结果的缺点避而不谈的原因，作为一个领域的研究者，我们必须要<strong>以辩证的思维，甚至是批判的思维去看待现有结论</strong>——这也就是对现有结论的质疑。</p><p>质疑是最简单的步骤。不相信一个结论很简单，自己不相信就好了；但是要让别人相信我们的结论，那就很费事了。因此，质疑的下一步是要<strong>提出我们自己的结论</strong>——也即提出假设或者提出猜想。</p><p>猜想是存在于脑海中的论点，它是虚无缥缈的。要解决一个问题，必须<strong>提出一个有充分论据佐证的论点</strong>。我们在设计验证过程时，一定要<strong>结合现实实际来进行设计</strong>——我们有什么条件，有可能做出来什么样的论据。这是极其trick（需要经验技巧）的一件事。</p><blockquote><p>创新，就是要发现新的问题，并且用自己可以实现的合理方法去解决该问题：</p><ul><li>质疑——以辩证思维审视现有结论</li><li>猜想——提出自己的论点</li><li>验证——设计并拿到论据支持论点</li></ul></blockquote><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>笔者自己也还是个科研新手。以一个科研新手的角度来思考这些问题，难免有失偏颇。所以如果有任何意见或建议，笔者都非常欢迎！Email: mozheyang@outlook.com. </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;笔者理工科在读研究生，从高中开始嗜读科普读物，开始参加化学竞赛，与自然科学结下不解之缘。本科专业方向金属加工相关，也由于项目原因接触过能源材料相关课题（锂电、电催化），同时多次参加创新创业项目及数学建模竞赛，结识了不少不同专业的同学。因此笔者斗胆认为，相对于同龄人，本人还是具有较强的跨学科意识的，习惯于进入新的（研究）领域。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Thought  随想" scheme="https://www.mozheyang.top/tags/Thought-%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>国内科研环境是否顺应时代？</title>
    <link href="https://www.mozheyang.top/2018/12/16/complain/"/>
    <id>https://www.mozheyang.top/2018/12/16/complain/</id>
    <published>2018-12-16T11:06:58.000Z</published>
    <updated>2020-02-02T07:58:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>我是一个理工科在读研究生。生于父母均为经管类教授的家庭，却从高中开始嗜读科普读物，自此与自然科学结下不解之缘。</p><a id="more"></a><p>虽早早与自然科学结缘，我却逐渐觉得自然（实验）科学研究方式及研究环境不尽人意：大家蜷缩在自己的研究领域，教授们为了申基金，学生们为了毕业，很少敢于挑战学界权威，甚至研究方法都不敢于进行大的改动。“保守型”的研究自有他的好处，好出成果，大家也看得懂，可以认同，皆大欢喜。“一口吃不成个大胖子”，这句话成了“保守学派”的最“有力”论据——大家都这么慢，你要是太快超前了，那才是件怪事呢。</p><p>埋怨归埋怨，但实验科学的物理限制仍然是无法忽视的。实验需要时间才能看到反馈。但教授需要基金维持项目运行，学生需要论文毕业，这都有着严格的时间限制。特别是在一个硕博士找工作都不是很顺利的社会背景下，让学生毕不了业那基本相当于断送了学生的未来。这种情况下，如何能从根本上解决为了发论文而发论文的现象？我不知道。我想大多数人也跟我一样。</p><p>但我不想将就。</p><p>一个没有办法给大多数年轻人提供更高平台（理想与待遇）的行业，是不配拥有这么多年轻人为之奋斗和工作的。</p><p>现代的年轻人不是吃不了苦。我们只是希望我们的付出能得到合理的回报，不论是金钱或是自我/社会认同，而不是一直廉价的无谓付出。“不患寡而患不均”，互联网让大家都能看到最好的，必然会怂恿越来越多的人去竞争所谓的最好的。</p><p>或许是没有远见吧。</p><p>顺应时代还是最轻松的活法。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我是一个理工科在读研究生。生于父母均为经管类教授的家庭，却从高中开始嗜读科普读物，自此与自然科学结下不解之缘。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Thought  随想" scheme="https://www.mozheyang.top/tags/Thought-%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode | Shortest Distance to a Character (easy level)</title>
    <link href="https://www.mozheyang.top/2018/12/02/leetcode821/"/>
    <id>https://www.mozheyang.top/2018/12/02/leetcode821/</id>
    <published>2018-12-02T08:22:08.000Z</published>
    <updated>2020-02-02T08:13:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Problem-821-Shortest-Distance-to-a-Character"><a href="#Problem-821-Shortest-Distance-to-a-Character" class="headerlink" title="Problem 821: Shortest Distance to a Character"></a>Problem 821: Shortest Distance to a Character</h1><p>Given a string <code>S</code> and a character <code>C</code>, return an array of integers representing the shortest distance from the character <code>C</code> in the string.</p><p><strong>Example 1:</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Input:</span> <span class="string">S</span> <span class="string">=</span> <span class="string">"loveleetcode"</span><span class="string">,</span> <span class="string">C</span> <span class="string">=</span> <span class="string">'e'</span></span><br><span class="line"><span class="attr">Output:</span> <span class="string">[3,</span> <span class="number">2</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="number">2</span><span class="string">,</span> <span class="number">2</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="number">0</span><span class="string">]</span></span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ol><li><code>S</code> string length is in <code>[1, 10000].</code></li><li><code>C</code> is a single character, and guaranteed to be in string <code>S</code>.</li><li>All letters in <code>S</code> and <code>C</code> are lowercase.</li></ol><a id="more"></a><h1 id="Good-solution-for-simplicity"><a href="#Good-solution-for-simplicity" class="headerlink" title="Good solution for simplicity"></a>Good solution for simplicity</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestToChar</span><span class="params">(self, S, C)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type S: str</span></span><br><span class="line"><span class="string">        :type C: str</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        clist=[i <span class="keyword">for</span> i,v <span class="keyword">in</span> enumerate(S) <span class="keyword">if</span> v==C]</span><br><span class="line">        <span class="keyword">return</span> [min(abs(i-x) <span class="keyword">for</span> i <span class="keyword">in</span> clist) <span class="keyword">for</span> x <span class="keyword">in</span> range(len(S))]</span><br></pre></td></tr></table></figure><p>This demo uses a <strong>generator</strong> to generate 2 lists: </p><p>one list (clist) stores position where letter equals to C, the other helps to output the final return list, which calculate <strong>every</strong> distances between letters and clist elements. </p><p>However, most of the distances calculation are not necessary. Thus, this method is simple to write, but not the fatest. </p><h1 id="Good-solution-for-efficiency"><a href="#Good-solution-for-efficiency" class="headerlink" title="Good solution for efficiency"></a>Good solution for efficiency</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestToChar</span><span class="params">(self, S, C)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type S: str</span></span><br><span class="line"><span class="string">        :type C: str</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        stack = []</span><br><span class="line">        last_C = <span class="literal">None</span></span><br><span class="line">        output = [<span class="number">0</span>] * len(S)</span><br><span class="line">        <span class="keyword">for</span> idx, ch <span class="keyword">in</span> enumerate(S):</span><br><span class="line">            <span class="keyword">if</span> ch != C:</span><br><span class="line">            stack.append(idx)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">while</span> stack:</span><br><span class="line">                    last_idx = stack.pop()</span><br><span class="line">                    <span class="keyword">if</span> last_C <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    output[last_idx] = idx - last_idx</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                    output[last_idx] = min(</span><br><span class="line">                            idx - last_idx,</span><br><span class="line">                            last_idx - last_C)</span><br><span class="line">                last_C = idx</span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            last_idx = stack.pop()</span><br><span class="line">            output[last_idx] = last_idx - last_C <span class="keyword">if</span> last_idx <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> <span class="number">-1</span></span><br><span class="line">        <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure><p>This method uses a <strong>stack</strong> data structure. stack <code>append</code> and stack <code>pop</code>. </p><p>For each screened letter, it compares two distances. </p><h1 id="My-ugly-solution-—-faster-than-71-17"><a href="#My-ugly-solution-—-faster-than-71-17" class="headerlink" title="My ugly solution — faster than 71.17%"></a>My ugly solution — faster than 71.17%</h1><p>My solution avoid most of the meaningless calculation in the most simple one, so it’s a litter bit faster.  </p><p>The main point of my solution is to generate an interval defined by <code>left</code> and <code>right</code>. We have to screen string list used <code>enumerate</code> from left to right. <code>index</code> points to where we are, if we are in the interval, we have to compare distance to <code>left</code> and <code>right</code>; if not, we have to redefined <code>left</code> and <code>right</code>, then compare. </p><p>So for every letter, there are only <strong>two distances</strong> waiting to be calculated and compared.  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestToChar</span><span class="params">(self, S, C)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type S: str</span></span><br><span class="line"><span class="string">        :type C: str</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        listEqC = []</span><br><span class="line">        <span class="keyword">for</span> index, obj <span class="keyword">in</span> enumerate(S):</span><br><span class="line">            <span class="keyword">if</span> obj == C:</span><br><span class="line">                listEqC.append(index)</span><br><span class="line">        return_list = []</span><br><span class="line">        pointer = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> listEqC != []:</span><br><span class="line">            left = right = listEqC[pointer]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            left = right = float(<span class="string">'inf'</span>)</span><br><span class="line">        <span class="keyword">for</span> index, obj <span class="keyword">in</span> enumerate(S):</span><br><span class="line">            <span class="keyword">if</span> index &gt;= right <span class="keyword">and</span> pointer != len(listEqC)<span class="number">-1</span>:</span><br><span class="line">                pointer += <span class="number">1</span></span><br><span class="line">                left = right</span><br><span class="line">                right = listEqC[pointer]</span><br><span class="line">            left_distance = abs(index-left)</span><br><span class="line">            right_distance = abs(index-right)</span><br><span class="line">            return_list.append(min(left_distance, right_distance))</span><br><span class="line">        <span class="keyword">return</span> return_list</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Problem-821-Shortest-Distance-to-a-Character&quot;&gt;&lt;a href=&quot;#Problem-821-Shortest-Distance-to-a-Character&quot; class=&quot;headerlink&quot; title=&quot;Problem 821: Shortest Distance to a Character&quot;&gt;&lt;/a&gt;Problem 821: Shortest Distance to a Character&lt;/h1&gt;&lt;p&gt;Given a string &lt;code&gt;S&lt;/code&gt; and a character &lt;code&gt;C&lt;/code&gt;, return an array of integers representing the shortest distance from the character &lt;code&gt;C&lt;/code&gt; in the string.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Input:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;S&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;loveleetcode&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;e&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Output:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;[3,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;S&lt;/code&gt; string length is in &lt;code&gt;[1, 10000].&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C&lt;/code&gt; is a single character, and guaranteed to be in string &lt;code&gt;S&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;All letters in &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; are lowercase.&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="Information Science &amp; Technology  信息科学与技术" scheme="https://www.mozheyang.top/tags/Information-Science-Technology-%E4%BF%A1%E6%81%AF%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
